/* Generated by the Nim Compiler v1.0.6 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI233136 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI232966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3694 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3604 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI230542 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI232681 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI232416 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI232355 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI232294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI232233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI231288 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI231046 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI67228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI203244 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3630 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3654 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI186084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI165017 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI186073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI186070 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI186067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI10256 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI186041 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI186045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI186043 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI230075 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3660 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3662 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI21156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3650 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3650 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3650.node = NNI3650;
var NNI3628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3628.node = NNI3628;
NTI3708.base = NTI3626;
NTI3714.base = NTI3626;
var NNI3626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3714, name: "up", sons: null}]};
NTI3626.node = NNI3626;
var NNI3608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3608.node = NNI3608;
NTI3626.base = NTI3608;
NTI3628.base = NTI3626;
NTI3650.base = NTI3628;
var NNI21156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI21156.node = NNI21156;
var NNI3662 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3662.node = NNI3662;
NTI3662.base = NTI3628;
var NNI3658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3658.node = NNI3658;
NTI3658.base = NTI3628;
var NNI3644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3644.node = NNI3644;
var NNI3642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3642.node = NNI3642;
NTI3642.base = NTI3628;
NTI3644.base = NTI3642;
var NNI3646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3646.node = NNI3646;
NTI3646.base = NTI3642;
var NNI3660 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3660.node = NNI3660;
NTI3660.base = NTI3628;
var NNI186041 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI186041, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI186041, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI186041, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI186041, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI186041, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI186041, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI186041, name: "JArray", len: 0, sons: null}}};
NTI186041.node = NNI186041;
var NNI186073 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI165017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI186043, name: "Field3", sons: null}]};
NTI186073.node = NNI186073;
NTI186070.base = NTI186073;
var NNI186067 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI186070, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI186067.node = NNI186067;
NTI186084.base = NTI186043;
var NNI186045 = {kind: 3, offset: "kind", len: 7, typ: NTI186041, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI138, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI10256, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI124, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI130, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI186067, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI186084, name: "elems", sons: null}]]};
NTI186045.node = NNI186045;
NTI186043.base = NTI186045;
var NNI230075 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI230075.node = NNI230075;
var NNI3654 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3654.node = NNI3654;
var NNI3652 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3652.node = NNI3652;
var NNI3630 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3630.node = NNI3630;
NTI3630.base = NTI3626;
NTI3652.base = NTI3630;
NTI3654.base = NTI3652;
var NNI203244 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI203244.node = NNI203244;
var NNI67228 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI104, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI67228.node = NNI67228;
var NNI231046 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI231046.node = NNI231046;
var NNI231288 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI231288.node = NNI231288;
var NNI232233 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI232233.node = NNI232233;
var NNI232294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI232294.node = NNI232294;
var NNI232355 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI232355.node = NNI232355;
var NNI232416 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI232416.node = NNI232416;
var NNI232681 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI232681.node = NNI232681;
var NNI230542 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "shapeId", len: 0, typ: NTI138, name: "shapeId", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI124, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI124, name: "y", sons: null}]};
NTI230542.node = NNI230542;
NTI3604.base = NTI3694;
var NNI232966 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3604, name: "Field1", sons: null}]};
NTI232966.node = NNI232966;
var NNI233136 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI186043, name: "Field1", sons: null}]};
NTI233136.node = NNI233136;

function makeNimstrLit(c_23270) {
		  var ln = c_23270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23270.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24827, src_24828, ti_24829) {
	var result_25019 = null;

		switch (ti_24829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24801(ti_24829))) {
			result_25019 = src_24828;
			}
			else {
				result_25019 = [src_24828[0], src_24828[1]];
			}
			
			break;
		case 19:
			      if (dest_24827 === null || dest_24827 === undefined) {
        dest_24827 = {};
      }
      else {
        for (var key in dest_24827) { delete dest_24827[key]; }
      }
      for (var key in src_24828) { dest_24827[key] = src_24828[key]; }
      result_25019 = dest_24827;
    
			break;
		case 18:
		case 17:
			if (!((ti_24829.base == null))) {
			result_25019 = nimCopy(dest_24827, src_24828, ti_24829.base);
			}
			else {
			if ((ti_24829.kind == 17)) {
			result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {m_type: ti_24829} : dest_24827;
			}
			else {
				result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {} : dest_24827;
			}
			}
			nimCopyAux(result_25019, src_24828, ti_24829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24828 === null) {
        result_25019 = null;
      }
      else {
        if (dest_24827 === null || dest_24827 === undefined) {
          dest_24827 = new Array(src_24828.length);
        }
        else {
          dest_24827.length = src_24828.length;
        }
        result_25019 = dest_24827;
        for (var i = 0; i < src_24828.length; ++i) {
          result_25019[i] = nimCopy(result_25019[i], src_24828[i], ti_24829.base);
        }
      }
    
			break;
		case 28:
			      if (src_24828 !== null) {
        result_25019 = src_24828.slice(0);
      }
    
			break;
		default: 
			result_25019 = src_24828;
			break;
		}

	return result_25019;

}

function arrayConstr(len_25086, value_25087, typ_25088) {
		    var result = new Array(len_25086);
    for (var i = 0; i < len_25086; ++i) result[i] = nimCopy(null, value_25087, typ_25088);
    return result;
  

	
}

function cstrToNimstr(c_23287) {
		  var ln = c_23287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_23304) {
										var Tmp5;
						var Tmp7;

	var result_23305 = null;

		var res_23363 = new_seq_23336((s_23304 != null ? s_23304.length : 0));
		var i_23365 = 0;
		var j_23367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_23365 < (s_23304 != null ? s_23304.length : 0))) break L2;
					var c_23368 = s_23304[i_23365];
					if ((c_23368 < 128)) {
					res_23363[j_23367] = String.fromCharCode(c_23368);
					i_23365 += 1;
					}
					else {
						var helper_23391 = new_seq_23336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_23392 = c_23368.toString(16);
									if (((code_23392 != null ? code_23392.length : 0) == 1)) {
									if (helper_23391 != null) { helper_23391.push("%0"); } else { helper_23391 = ["%0"]; };
									}
									else {
									if (helper_23391 != null) { helper_23391.push("%"); } else { helper_23391 = ["%"]; };
									}
									
									if (helper_23391 != null) { helper_23391.push(code_23392); } else { helper_23391 = [code_23392]; };
									i_23365 += 1;
										if (((s_23304 != null ? s_23304.length : 0) <= i_23365)) Tmp5 = true; else {											Tmp5 = (s_23304[i_23365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_23368 = s_23304[i_23365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_23363[j_23367] = decodeURIComponent(helper_23391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_23363[j_23367] = helper_23391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_23367 += 1;
				}
		} while(false);
		if (res_23363 === null) res_23363 = [];
               if (res_23363.length < j_23367) { for (var i=res_23363.length;i<j_23367;++i) res_23363.push(null); }
               else { res_23363.length = j_23367; };
		result_23305 = res_23363.join("");

	return result_23305;

}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		e_21618.trace = nimCopy(null, raw_write_stack_trace_21468(), NTI138);
		throw e_21618;

	
}

function chckRange(i_25124, a_25125, b_25126) {
			var Tmp1;

	var result_25127 = 0;

	BeforeRet: do {
			if (!(a_25125 <= i_25124)) Tmp1 = false; else {				Tmp1 = (i_25124 <= b_25126);			}		if (Tmp1) {
		result_25127 = i_25124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_25127;

}

function chckIndx(i_25105, a_25106, b_25107) {
			var Tmp1;

	var result_25108 = 0;

	BeforeRet: do {
			if (!(a_25106 <= i_25105)) Tmp1 = false; else {				Tmp1 = (i_25105 <= b_25107);			}		if (Tmp1) {
		result_25108 = i_25105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_25105, a_25106, b_25107);
		}
		
	} while (false);

	return result_25108;

}

function divInt(a_23857, b_23858) {
		    if (b_23858 == 0) raiseDivByZero();
    if (b_23858 == -1 && a_23857 == 2147483647) raiseOverflow();
    return Math.trunc(a_23857 / b_23858);
  

	
}

function mulInt(a_23839, b_23840) {
		    var result = a_23839 * b_23840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function subInt(a_23821, b_23822) {
		    var result = a_23821 - b_23822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_23803, b_23804) {
		    var result = a_23803 + b_23804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function modInt(a_23875, b_23876) {
		    if (b_23876 == 0) raiseDivByZero();
    if (b_23876 == -1 && a_23875 == 2147483647) raiseOverflow();
    return Math.trunc(a_23875 % b_23876);
  

	
}

function eqStrings(a_23641, b_23642) {
		    if (a_23641 == b_23642) return true;
    if (a_23641 === null && b_23642.length == 0) return true;
    if (b_23642 === null && a_23641.length == 0) return true;
    if ((!a_23641) || (!b_23642)) return false;
    var alen = a_23641.length;
    if (alen != b_23642.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_23641[i] != b_23642[i]) return false;
    return true;
  

	
}
var ConstSet2 = setConstr(5);

function raiseFieldError(f_23055) {
		var eHEX60gensym23058_23203 = null;
		eHEX60gensym23058_23203 = {m_type: NTI3660, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym23058_23203.message = nimCopy(null, f_23055, NTI138);
		eHEX60gensym23058_23203.parent = null;
		raiseException(eHEX60gensym23058_23203, "FieldError");

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function mnewString(len_23463) {
		    return new Array(len_23463);
  

	
}
var ConstSet3 = setConstr(5);
var ConstSet4 = setConstr(5);

function addChar(x_25311, c_25312) {
		x_25311.push(c_25312);

	
}
var ConstSet5 = setConstr(4);
var ConstSet6 = setConstr(2);
var ConstSet7 = setConstr(3);
var ConstSet8 = setConstr(1);
var ConstSet9 = setConstr(6);
var ConstSet10 = setConstr(6);
var ConstSet11 = setConstr(6);
var ConstSet12 = setConstr(5);
var ConstSet13 = setConstr(5);
var ConstSet14 = setConstr(5);
var ConstSet15 = setConstr(3);
var ConstSet16 = setConstr(2);
var ConstSet17 = setConstr(6);
var ConstSet18 = setConstr(6);
var ConstSet19 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet20 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet21 = setConstr([48, 57]);
var ConstSet22 = setConstr([48, 57]);
var ConstSet23 = setConstr(101, 69);
var ConstSet24 = setConstr([48, 57]);
var ConstSet25 = setConstr([48, 57]);

function nimParseBiggestFloat(s_25356, number_25358, number_25358_Idx, start_25359) {
	var result_25361 = 0;

	var F={procname:"system.nimParseBiggestFloat",prev:framePtr,filename:"jssys.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 686;
		var esign_25362 = 1.0000000000000000e+00;
		F.line = 687;
		var sign_25363 = 1.0000000000000000e+00;
		F.line = 688;
		var i_25364 = start_25359;
		F.line = 689;
		var exponent_25365 = 0;
		F.line = 690;
		var flags_25366 = 0;
		F.line = 691;
		number_25358[number_25358_Idx] = 0.0;
		if ((s_25356[i_25364] == 43)) {
		F.line = 692;
		i_25364 += 1;
		}
		else {
		if ((s_25356[i_25364] == 45)) {
		F.line = 694;
		sign_25363 = -1.0000000000000000e+00;
		F.line = 695;
		i_25364 += 1;
		}
		}
		if (((s_25356[i_25364] == 78) || (s_25356[i_25364] == 110))) {
		if (((s_25356[(i_25364 + 1)] == 65) || (s_25356[(i_25364 + 1)] == 97))) {
		if (((s_25356[(i_25364 + 2)] == 78) || (s_25356[(i_25364 + 2)] == 110))) {
		if (!((ConstSet19[s_25356[(i_25364 + 3)]] != undefined))) {
		F.line = 700;
		number_25358[number_25358_Idx] = NaN;
		F.line = 701;
		result_25361 = ((i_25364 + 3) - start_25359);
		break BeforeRet;
		}
		
		}
		
		}
		
		F.line = 702;
		result_25361 = 0;
		break BeforeRet;
		}
		
		if (((s_25356[i_25364] == 73) || (s_25356[i_25364] == 105))) {
		if (((s_25356[(i_25364 + 1)] == 78) || (s_25356[(i_25364 + 1)] == 110))) {
		if (((s_25356[(i_25364 + 2)] == 70) || (s_25356[(i_25364 + 2)] == 102))) {
		if (!((ConstSet20[s_25356[(i_25364 + 3)]] != undefined))) {
		F.line = 707;
		number_25358[number_25358_Idx] = (Infinity * sign_25363);
		F.line = 708;
		result_25361 = ((i_25364 + 3) - start_25359);
		break BeforeRet;
		}
		
		}
		
		}
		
		F.line = 709;
		result_25361 = 0;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 710;
				L2: while (true) {
				if (!(ConstSet21[s_25356[i_25364]] != undefined)) break L2;
					F.line = 712;
					flags_25366 = (flags_25366 | 1);
					F.line = 713;
					number_25358[number_25358_Idx] = ((number_25358[number_25358_Idx] * 1.0000000000000000e+01) + to_float_10657((s_25356[i_25364] - 48)));
					F.line = 714;
					i_25364 += 1;
					L3: do {
						F.line = 715;
							L4: while (true) {
							if (!(s_25356[i_25364] == 95)) break L4;
								F.line = 715;
								i_25364 += 1;
							}
					} while(false);
				}
		} while(false);
		if ((s_25356[i_25364] == 46)) {
		F.line = 718;
		var hd_25420 = 1.0000000000000000e+00;
		F.line = 719;
		i_25364 += 1;
		L5: do {
			F.line = 720;
				L6: while (true) {
				if (!(ConstSet22[s_25356[i_25364]] != undefined)) break L6;
					F.line = 722;
					flags_25366 = (flags_25366 | 2);
					F.line = 723;
					number_25358[number_25358_Idx] = ((number_25358[number_25358_Idx] * 1.0000000000000000e+01) + to_float_10657((s_25356[i_25364] - 48)));
					F.line = 724;
					hd_25420 = (hd_25420 * 1.0000000000000000e+01);
					F.line = 725;
					i_25364 += 1;
					L7: do {
						F.line = 726;
							L8: while (true) {
							if (!(s_25356[i_25364] == 95)) break L8;
								F.line = 726;
								i_25364 += 1;
							}
					} while(false);
				}
		} while(false);
		F.line = 727;
		number_25358[number_25358_Idx] = (number_25358[number_25358_Idx] / hd_25420);
		}
		
		if ((flags_25366 == 0)) {
		F.line = 729;
		result_25361 = 0;
		break BeforeRet;
		}
		
		if ((ConstSet23[s_25356[i_25364]] != undefined)) {
		F.line = 732;
		i_25364 += 1;
		if ((s_25356[i_25364] == 43)) {
		F.line = 734;
		i_25364 += 1;
		}
		else {
		if ((s_25356[i_25364] == 45)) {
		F.line = 736;
		esign_25362 = -1.0000000000000000e+00;
		F.line = 737;
		i_25364 += 1;
		}
		}
		if (!((ConstSet24[s_25356[i_25364]] != undefined))) {
		F.line = 739;
		result_25361 = 0;
		break BeforeRet;
		}
		
		L9: do {
			F.line = 740;
				L10: while (true) {
				if (!(ConstSet25[s_25356[i_25364]] != undefined)) break L10;
					F.line = 741;
					exponent_25365 = (((exponent_25365 * 10) + s_25356[i_25364]) - 48);
					F.line = 742;
					i_25364 += 1;
					L11: do {
						F.line = 743;
							L12: while (true) {
							if (!(s_25356[i_25364] == 95)) break L12;
								F.line = 743;
								i_25364 += 1;
							}
					} while(false);
				}
		} while(false);
		}
		
		F.line = 745;
		var hd_25514 = ten_to_the_power_of_25326(exponent_25365);
		if ((0.0 < esign_25362)) {
		F.line = 746;
		number_25358[number_25358_Idx] = (number_25358[number_25358_Idx] * hd_25514);
		}
		else {
			F.line = 747;
			number_25358[number_25358_Idx] = (number_25358[number_25358_Idx] / hd_25514);
		}
		
		F.line = 749;
		number_25358[number_25358_Idx] = (number_25358[number_25358_Idx] * sign_25363);
		F.line = 750;
		result_25361 = (i_25364 - start_25359);
	} while (false);
	framePtr = F.prev;

	return result_25361;

}
var ConstSet26 = setConstr(6);
var ConstSet27 = setConstr(5);
var ConstSet28 = setConstr(5);
var ConstSet29 = setConstr(4);
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_165237 = [0];
var state_212005 = [{a0: 1773455756, a1: 4275166512}];
var utc_instance_221031 = [null];
var local_instance_221032 = [null];
var canvas_id_51001 = [makeNimstrLit("MyCanvas")];
var height_51003 = [1.0000000000000000e+03];
var width_51005 = [1.0000000000000000e+03];

function new_jarray_186657() {
	var result_186659 = null;

	var F={procname:"json.newJArray",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 214;
		result_186659 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};
	framePtr = F.prev;

	return result_186659;

}

function is_power_of_two_144062(x_144064) {
		var Tmp1;

	var result_144065 = false;

	BeforeRet: do {
		if (!(0 < x_144064)) Tmp1 = false; else {			Tmp1 = ((x_144064 & (x_144064 - 1)) == 0);		}		result_144065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_144065;

}

function is_fat_pointer_24801(ti_24803) {
	var result_24804 = false;

	BeforeRet: do {
		result_24804 = !((ConstSet1[ti_24803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24804;

}

function nimCopyAux(dest_24832, src_24833, n_24835) {
		switch (n_24835.kind) {
		case 0:
			break;
		case 1:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24835.sons.length; i++) {
      nimCopyAux(dest_24832, src_24833, n_24835.sons[i]);
    }
    
			break;
		case 3:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
      for (var i = 0; i < n_24835.sons.length; ++i) {
        nimCopyAux(dest_24832, src_24833, n_24835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_21151(f_21153) {
					var Tmp3;

	var result_21154 = [null];

		var it_21162 = f_21153;
		var i_21164 = 0;
		var total_21166 = 0;
		var temp_frames_21173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI21156);
		L1: do {
				L2: while (true) {
					if (!!((it_21162 == null))) Tmp3 = false; else {						Tmp3 = (i_21164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_21173[i_21164].Field0 = it_21162.procname;
					temp_frames_21173[i_21164].Field1 = it_21162.line;
					i_21164 += 1;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_21162 == null))) break L5;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		result_21154[0] = nimCopy(null, [], NTI138);
		if (!((total_21166 == i_21164))) {
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("(")); } else { result_21154[0] = makeNimstrLit("("); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr(((total_21166 - i_21164))+"")); } else { result_21154[0] = cstrToNimstr(((total_21166 - i_21164))+"").slice(); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_21154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_21421 = 0;
			var colontmp__233466 = 0;
			colontmp__233466 = (i_21164 - 1);
			var res_233471 = colontmp__233466;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_233471)) break L8;
						j_21421 = res_233471;
						add_18638(result_21154, 0, temp_frames_21173[j_21421].Field0);
						if ((0 < temp_frames_21173[j_21421].Field1)) {
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(", line: ")); } else { result_21154[0] = makeNimstrLit(", line: "); };
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr((temp_frames_21173[j_21421].Field1)+"")); } else { result_21154[0] = cstrToNimstr((temp_frames_21173[j_21421].Field1)+"").slice(); };
						}
						
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("\x0A")); } else { result_21154[0] = makeNimstrLit("\x0A"); };
						res_233471 -= 1;
					}
			} while(false);
		} while(false);

	return result_21154[0];

}

function raw_write_stack_trace_21468() {
	var result_21470 = null;

		if (!((framePtr == null))) {
		result_21470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_21151(framePtr) || []), NTI138);
		}
		else {
			result_21470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_21470;

}

function new_seq_23336(len_23339) {
	var result_23341 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_23341 = new Array(len_23339); for (var i=0;i<len_23339;++i) {result_23341[i]=null;}	framePtr = F.prev;

	return result_23341;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(raw_write_stack_trace_21468()); } else { buf_21530[0] = raw_write_stack_trace_21468().slice(); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function sys_fatal_15062(message_15066) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_15203 = null;
		F.line = 37;
		e_15203 = {m_type: NTI3650, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_15203.message = nimCopy(null, message_15066, NTI138);
		F.line = 39;
		raiseException(e_15203, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_15058(msg_15060) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_15062(msg_15060);
	framePtr = F.prev;

	
}

function failed_assert_impl_15266(msg_15268) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_15058(msg_15268);
	framePtr = F.prev;

	
}

function raiseRangeError() {
		var eHEX60gensym22457_22603 = null;
		eHEX60gensym22457_22603 = {m_type: NTI3662, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22457_22603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		eHEX60gensym22457_22603.parent = null;
		raiseException(eHEX60gensym22457_22603, "RangeError");

	
}

function init_ordered_table_186209(initial_size_186213) {
	var result_186215 = {data: null, counter: 0, first: 0, last: 0};

	var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_144062(initial_size_186213))) {
		F.line = 118;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_186215.counter = 0;
		F.line = 120;
		result_186215.data = new Array(chckRange(initial_size_186213, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_186213, 0, 2147483647);++i) {result_186215.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 122;
		result_186215.first = -1;
		F.line = 123;
		result_186215.last = -1;
	framePtr = F.prev;

	return result_186215;

}

function new_jobject_186204() {
	var result_186206 = null;

	var F={procname:"json.newJObject",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 210;
		result_186206 = {kind: 5, fields: init_ordered_table_186209(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
	framePtr = F.prev;

	return result_186206;

}

function raiseIndexError(i_22655, a_22656, b_22657) {
		var Tmp1;

		var eHEX60gensym22802_23003 = null;
		eHEX60gensym22802_23003 = {m_type: NTI3658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22657 < a_22656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22657)+"") || []);
		}
		
		eHEX60gensym22802_23003.message = nimCopy(null, Tmp1, NTI138);
		eHEX60gensym22802_23003.parent = null;
		raiseException(eHEX60gensym22802_23003, "IndexError");

	
}

function raiseDivByZero() {
		var eHEX60gensym22257_22403 = null;
		eHEX60gensym22257_22403 = {m_type: NTI3644, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22257_22403.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		eHEX60gensym22257_22403.parent = null;
		raiseException(eHEX60gensym22257_22403, "DivByZeroError");

	
}

function raiseOverflow() {
		var eHEX60gensym22058_22203 = null;
		eHEX60gensym22058_22203 = {m_type: NTI3646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22058_22203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		eHEX60gensym22058_22203.parent = null;
		raiseException(eHEX60gensym22058_22203, "OverflowError");

	
}

function imul_165768(a_165770, b_165771) {
	var result_165772 = 0;

	var F={procname:"hashes.imul",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 154;
		var mask_165773 = 65535;
		F.line = 156;
		var a_hi_165786 = (((a_165770 >>> 0) >>> 16) & mask_165773);
		F.line = 157;
		var a_lo_165792 = (a_165770 & mask_165773);
		F.line = 158;
		var b_hi_165805 = (((b_165771 >>> 0) >>> 16) & mask_165773);
		F.line = 159;
		var b_lo_165811 = (b_165771 & mask_165773);
		F.line = 160;
		result_165772 = ((((a_lo_165792 * b_lo_165811) >>> 0) + (((((a_hi_165786 * b_lo_165811) >>> 0) + ((a_lo_165792 * b_hi_165805) >>> 0)) >>> 0) << 16)) >>> 0);
	framePtr = F.prev;

	return result_165772;

}

function rotl32_166001(x_166003, r_166004) {
	var result_166005 = 0;

	var F={procname:"hashes.rotl32",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 165;
		result_166005 = ((x_166003 << r_166004) | ((x_166003 >>> 0) >>> subInt(32, r_166004)));
	framePtr = F.prev;

	return result_166005;

}

function murmur_hash_166037(x_166040) {
	var result_166041 = 0;

	var F={procname:"hashes.murmurHash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 176;
		var size_166051 = (x_166040 != null ? x_166040.length : 0);
		F.line = 177;
		var step_size_166053 = 4;
		F.line = 178;
		var n_166054 = divInt(size_166051, step_size_166053);
		F.line = 180;
		var h1_166055 = 0;
		F.line = 181;
		var i_166057 = 0;
		L1: do {
			F.line = 184;
				L2: while (true) {
				if (!(i_166057 < mulInt(n_166054, step_size_166053))) break L2;
					F.line = 185;
					var k1_166058 = 0;
					F.line = 187;
					var j_166059 = step_size_166053;
					L3: do {
						F.line = 188;
							L4: while (true) {
							if (!(0 < j_166059)) break L4;
								F.line = 189;
								j_166059 = subInt(j_166059, 1);
								F.line = 190;
								k1_166058 = ((k1_166058 << 8) | x_166040[chckIndx(addInt(i_166057, j_166059), 0, (x_166040 != null ? x_166040.length : 0)+0-1)-0]);
							}
					} while(false);
					F.line = 193;
					i_166057 = addInt(i_166057, step_size_166053);
					F.line = 195;
					k1_166058 = imul_165768(k1_166058, 3432918353);
					F.line = 196;
					k1_166058 = rotl32_166001(k1_166058, 15);
					F.line = 197;
					k1_166058 = imul_165768(k1_166058, 461845907);
					F.line = 199;
					h1_166055 = (h1_166055 ^ k1_166058);
					F.line = 200;
					h1_166055 = rotl32_166001(h1_166055, 13);
					F.line = 201;
					h1_166055 = ((((h1_166055 * 5) >>> 0) + 3864292196) >>> 0);
				}
		} while(false);
		F.line = 204;
		var k1_166222 = 0;
		F.line = 205;
		var rem_166223 = modInt(size_166051, step_size_166053);
		L5: do {
			F.line = 206;
				L6: while (true) {
				if (!(0 < rem_166223)) break L6;
					F.line = 207;
					rem_166223 = subInt(rem_166223, 1);
					F.line = 208;
					k1_166222 = ((k1_166222 << 8) | x_166040[chckIndx(addInt(i_166057, rem_166223), 0, (x_166040 != null ? x_166040.length : 0)+0-1)-0]);
				}
		} while(false);
		F.line = 209;
		k1_166222 = imul_165768(k1_166222, 3432918353);
		F.line = 210;
		k1_166222 = rotl32_166001(k1_166222, 15);
		F.line = 211;
		k1_166222 = imul_165768(k1_166222, 461845907);
		F.line = 212;
		h1_166055 = (h1_166055 ^ k1_166222);
		F.line = 215;
		h1_166055 = (h1_166055 ^ size_166051);
		F.line = 216;
		h1_166055 = (h1_166055 ^ ((h1_166055 >>> 0) >>> 16));
		F.line = 217;
		h1_166055 = imul_165768(h1_166055, 2246822507);
		F.line = 218;
		h1_166055 = (h1_166055 ^ ((h1_166055 >>> 0) >>> 13));
		F.line = 219;
		h1_166055 = imul_165768(h1_166055, 3266489909);
		F.line = 220;
		h1_166055 = (h1_166055 ^ ((h1_166055 >>> 0) >>> 16));
		F.line = 221;
		result_166041 = (h1_166055|0);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_166041;

}

function hash_166814(x_166816) {
	var result_166817 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 250;
		result_166817 = murmur_hash_166037((x_166816.slice(0, (x_166816 != null ? (x_166816.length-1) : -1)+1)));
	framePtr = F.prev;

	return result_166817;

}

function is_filled_170018(hcode_170020) {
	var result_170021 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_170021 = !((hcode_170020 == 0));
	framePtr = F.prev;

	return result_170021;

}

function next_try_170035(h_170037, max_hash_170038) {
	var result_170039 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 30;
		result_170039 = (addInt(h_170037, 1) & max_hash_170038);
	framePtr = F.prev;

	return result_170039;

}

function raw_get_188021(t_188026, key_188027, hc_188028, hc_188028_Idx) {
						var Tmp3;

	var result_188029 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_188028[hc_188028_Idx] = hash_166814(key_188027);
		if ((hc_188028[hc_188028_Idx] == 0)) {
		F.line = 56;
		hc_188028[hc_188028_Idx] = 314159265;
		}
		
		if (((t_188026.data != null ? t_188026.data.length : 0) == 0)) {
		F.line = 38;
		result_188029 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_188171 = (hc_188028[hc_188028_Idx] & (t_188026.data != null ? (t_188026.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_170018(t_188026.data[chckIndx(h_188171, 0, (t_188026.data != null ? t_188026.data.length : 0)+0-1)-0].Field0)) break L2;
						if (!(t_188026.data[chckIndx(h_188171, 0, (t_188026.data != null ? t_188026.data.length : 0)+0-1)-0].Field0 == hc_188028[hc_188028_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_188026.data[chckIndx(h_188171, 0, (t_188026.data != null ? t_188026.data.length : 0)+0-1)-0].Field2, key_188027);						}					if (Tmp3) {
					F.line = 46;
					result_188029 = h_188171;
					break BeforeRet;
					}
					
					F.line = 47;
					h_188171 = next_try_170035(h_188171, (t_188026.data != null ? (t_188026.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_188029 = subInt(-1, h_188171);
	} while (false);
	framePtr = F.prev;

	return result_188029;

}

function must_rehash_170053(length_170055, counter_170056) {
	var result_170057 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		if (!((counter_170056 < length_170055))) {
		F.line = 33;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/collections/hashcommon.nim(33, 9) `length > counter` "));
		}
		
		F.line = 34;
		result_170057 = ((mulInt(length_170055, 2) < mulInt(counter_170056, 3)) || (subInt(length_170055, counter_170056) < 4));
	framePtr = F.prev;

	return result_170057;

}

function raw_insert_190465(t_190471, data_190474, data_190474_Idx, key_190475, val_190476, hc_190477, h_190478) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_190474[data_190474_Idx][chckIndx(h_190478, 0, (data_190474[data_190474_Idx] != null ? data_190474[data_190474_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_190475, NTI138);
		F.line = 23;
		data_190474[data_190474_Idx][chckIndx(h_190478, 0, (data_190474[data_190474_Idx] != null ? data_190474[data_190474_Idx].length : 0)+0-1)-0].Field3 = val_190476;
		F.line = 24;
		data_190474[data_190474_Idx][chckIndx(h_190478, 0, (data_190474[data_190474_Idx] != null ? data_190474[data_190474_Idx].length : 0)+0-1)-0].Field0 = hc_190477;
		F.line = 1234;
		data_190474[data_190474_Idx][chckIndx(h_190478, 0, (data_190474[data_190474_Idx] != null ? data_190474[data_190474_Idx].length : 0)+0-1)-0].Field1 = -1;
		if ((t_190471.first < 0)) {
		F.line = 1235;
		t_190471.first = h_190478;
		}
		
		if ((0 <= t_190471.last)) {
		F.line = 1236;
		data_190474[data_190474_Idx][chckIndx(t_190471.last, 0, (data_190474[data_190474_Idx] != null ? data_190474[data_190474_Idx].length : 0)+0-1)-0].Field1 = h_190478;
		}
		
		F.line = 1237;
		t_190471.last = h_190478;
	framePtr = F.prev;

	
}

function enlarge_189367(t_189373) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1240;
		var n_189381 = null;
		F.line = 1241;
		n_189381 = new Array(chckRange(mulInt((t_189373.data != null ? t_189373.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_189373.data != null ? t_189373.data.length : 0), 2), 0, 2147483647);++i) {n_189381[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 1242;
		var h_189520 = t_189373.first;
		F.line = 1243;
		t_189373.first = -1;
		F.line = 1244;
		t_189373.last = -1;
		F.line = 1245;
		var Tmp1 = t_189373.data; t_189373.data = n_189381; n_189381 = Tmp1;		L2: do {
			F.line = 1246;
				L3: while (true) {
				if (!(0 <= h_189520)) break L3;
					F.line = 1247;
					var nxt_189679 = n_189381[chckIndx(h_189520, 0, (n_189381 != null ? n_189381.length : 0)+0-1)-0].Field1;
					F.line = 1248;
					var eh_189828 = n_189381[chckIndx(h_189520, 0, (n_189381 != null ? n_189381.length : 0)+0-1)-0].Field0;
					if (is_filled_170018(eh_189828)) {
					F.line = 1250;
					var j_189835 = (eh_189828 & (t_189373.data != null ? (t_189373.data.length-1) : -1));
					L4: do {
						F.line = 1251;
							L5: while (true) {
							if (!is_filled_170018(t_189373.data[chckIndx(j_189835, 0, (t_189373.data != null ? t_189373.data.length : 0)+0-1)-0].Field0)) break L5;
								F.line = 1252;
								j_189835 = next_try_170035(j_189835, (t_189373.data != null ? (t_189373.data.length-1) : -1));
							}
					} while(false);
					F.line = 1253;
					raw_insert_190465(t_189373, t_189373, "data", n_189381[chckIndx(h_189520, 0, (n_189381 != null ? n_189381.length : 0)+0-1)-0].Field2, n_189381[chckIndx(h_189520, 0, (n_189381 != null ? n_189381.length : 0)+0-1)-0].Field3, n_189381[chckIndx(h_189520, 0, (n_189381 != null ? n_189381.length : 0)+0-1)-0].Field0, j_189835);
					}
					
					F.line = 1254;
					h_189520 = nxt_189679;
				}
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_191267(t_191272, key_191273, hc_191274) {
	var result_191275 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_191272.data != null ? t_191272.data.length : 0) == 0)) {
		F.line = 38;
		result_191275 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_191414 = (hc_191274 & (t_191272.data != null ? (t_191272.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_170018(t_191272.data[chckIndx(h_191414, 0, (t_191272.data != null ? t_191272.data.length : 0)+0-1)-0].Field0)) break L2;
					if (((t_191272.data[chckIndx(h_191414, 0, (t_191272.data != null ? t_191272.data.length : 0)+0-1)-0].Field0 == hc_191274) && eqStrings(t_191272.data[chckIndx(h_191414, 0, (t_191272.data != null ? t_191272.data.length : 0)+0-1)-0].Field2, key_191273))) {
					F.line = 46;
					result_191275 = h_191414;
					break BeforeRet;
					}
					
					F.line = 47;
					h_191414 = next_try_170035(h_191414, (t_191272.data != null ? (t_191272.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_191275 = subInt(-1, h_191414);
	} while (false);
	framePtr = F.prev;

	return result_191275;

}

function HEX5BHEX5DHEX3D_187511(t_187517, key_187518, val_187519) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_187517.data != null ? t_187517.data.length : 0) == 0)) {
		if (!(is_power_of_two_144062(64))) {
		F.line = 118;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_187517.counter = 0;
		F.line = 120;
		t_187517.data = new Array(64); for (var i=0;i<64;++i) {t_187517.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 122;
		t_187517.first = -1;
		F.line = 123;
		t_187517.last = -1;
		}
		
		F.line = 57;
		var hc_188001 = [0];
		F.line = 58;
		var index_188639 = raw_get_188021(t_187517, key_187518, hc_188001, 0);
		if ((0 <= index_188639)) {
		F.line = 59;
		t_187517.data[chckIndx(index_188639, 0, (t_187517.data != null ? t_187517.data.length : 0)+0-1)-0].Field3 = val_187519;
		}
		else {
			if (((t_187517.data != null ? t_187517.data.length : 0) == 0)) {
			if (!(is_power_of_two_144062(64))) {
			F.line = 118;
			failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_187517.counter = 0;
			F.line = 120;
			t_187517.data = new Array(64); for (var i=0;i<64;++i) {t_187517.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			F.line = 122;
			t_187517.first = -1;
			F.line = 123;
			t_187517.last = -1;
			}
			
			if (must_rehash_170053((t_187517.data != null ? t_187517.data.length : 0), t_187517.counter)) {
			F.line = 49;
			enlarge_189367(t_187517);
			F.line = 50;
			index_188639 = raw_get_known_hc_191267(t_187517, key_187518, hc_188001[0]);
			}
			
			F.line = 51;
			index_188639 = subInt(-1, index_188639);
			F.line = 52;
			raw_insert_190465(t_187517, t_187517, "data", key_187518, val_187519, hc_188001[0], index_188639);
			F.line = 60;
			t_187517.counter = addInt(t_187517.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX25_192080(key_vals_192086) {
						var Tmp4;

	var result_192087 = null;

	var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((key_vals_192086 != null ? key_vals_192086.length : 0) == 0)) {
		F.line = 322;
		result_192087 = new_jarray_186657();
		break BeforeRet;
		}
		
		F.line = 323;
		result_192087 = new_jobject_186204();
		L1: do {
			F.line = 324;
			var key_192122 = null;
			F.line = 324;
			var val_192123 = null;
			F.line = 3;
			var i_232609 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_232609 < (key_vals_192086 != null ? key_vals_192086.length : 0))) break L3;
						F.line = 324;
						key_192122 = key_vals_192086[chckIndx(i_232609, 0, (key_vals_192086 != null ? key_vals_192086.length : 0)+0-1)-0]["Field0"];
						F.line = 5;
						val_192123 = key_vals_192086[chckIndx(i_232609, 0, (key_vals_192086 != null ? key_vals_192086.length : 0)+0-1)-0]["Field1"];
						F.line = 324;
						var Tmp4 = result_192087;
						if (ConstSet2[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
						HEX5BHEX5DHEX3D_187511(Tmp4.fields, key_192122, val_192123);
						F.line = 6;
						i_232609 = addInt(i_232609, 1);
					}
			} while(false);
		} while(false);
	} while (false);
	framePtr = F.prev;

	return result_192087;

}

function get_context2d_54234(c_54236) {
	var result_54237 = null;

	var F={procname:"Blackvas.getContext2d",prev:framePtr,filename:"canvas.nim",line:0};
	framePtr = F;
		F.line = 105;
		result_54237 = c_54236.getContext('2d');
	framePtr = F.prev;

	return result_54237;

}

function nsuRepeatChar(c_155656, count_155657) {
	var result_155658 = null;

	var F={procname:"strutils.repeat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1294;
		result_155658 = nimCopy(null, mnewString(count_155657), NTI138);
		L1: do {
			F.line = 1295;
			var i_155667 = 0;
			F.line = 2699;
			var colontmp__232632 = 0;
			F.line = 1295;
			colontmp__232632 = subInt(count_155657, 1);
			F.line = 2710;
			var res_232633 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_232633 <= colontmp__232632)) break L3;
						F.line = 1295;
						i_155667 = res_232633;
						F.line = 1295;
						result_155658[chckIndx(i_155667, 0, (result_155658 != null ? result_155658.length : 0)+0-1)-0] = c_155656;
						F.line = 2713;
						res_232633 = addInt(res_232633, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_155658;

}

function spaces_155708(n_155710) {
	var result_155711 = null;

	var F={procname:"strutils.spaces",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1307;
		result_155711 = nimCopy(null, nsuRepeatChar(32, n_155710), NTI138);
	framePtr = F.prev;

	return result_155711;

}

function indent_201668(s_201671, s_201671_Idx, i_201672) {
	var F={procname:"json.indent",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 587;
		if (s_201671[s_201671_Idx] != null) { s_201671[s_201671_Idx] = (s_201671[s_201671_Idx]).concat(spaces_155708(chckRange(i_201672, 0, 2147483647))); } else { s_201671[s_201671_Idx] = spaces_155708(chckRange(i_201672, 0, 2147483647)).slice(); };
	framePtr = F.prev;

	
}

function len_193965(t_193970) {
	var result_193971 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1474;
		result_193971 = t_193970.counter;
	framePtr = F.prev;

	return result_193971;

}

function nl_201705(s_201708, s_201708_Idx, ml_201709) {
		var Tmp1;

	var F={procname:"json.nl",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 594;
		if (ml_201709) {
		Tmp1 = makeNimstrLit("\x0A");
		}
		else {
		Tmp1 = makeNimstrLit(" ");
		}
		
		if (s_201708[s_201708_Idx] != null) { s_201708[s_201708_Idx] = (s_201708[s_201708_Idx]).concat(Tmp1); } else { s_201708[s_201708_Idx] = Tmp1.slice(); };
	framePtr = F.prev;

	
}

function new_indent_201686(curr_201688, indent_201689, ml_201690) {
	var result_201691 = 0;

	var F={procname:"json.newIndent",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (ml_201690) {
		F.line = 590;
		result_201691 = addInt(curr_201688, indent_201689);
		break BeforeRet;
		}
		else {
			F.line = 591;
			result_201691 = indent_201689;
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_201691;

}

function nsuToHex(x_153250, len_153251) {
	var result_153252 = null;

	var F={procname:"strutils.toHex",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 949;
		var n_153254 = x_153250;
		F.line = 950;
		result_153252 = nimCopy(null, mnewString(len_153251), NTI138);
		L1: do {
			F.line = 951;
			var j_153261 = 0;
			F.line = 2639;
			var colontmp__233491 = 0;
			F.line = 951;
			colontmp__233491 = subInt(len_153251, 1);
			F.line = 2661;
			var res_233492 = colontmp__233491;
			L2: do {
				F.line = 2662;
					L3: while (true) {
					if (!(0 <= res_233492)) break L3;
						F.line = 951;
						j_153261 = res_233492;
						F.line = 952;
						result_153252[chckIndx(j_153261, 0, (result_153252 != null ? result_153252.length : 0)+0-1)-0] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_153254 & 15), 0, (makeNimstrLit("0123456789ABCDEF") != null ? makeNimstrLit("0123456789ABCDEF").length : 0)+0-1)-0];
						F.line = 953;
						n_153254 = (n_153254 >> 4);
						if (((n_153254 == 0) && (x_153250 < 0))) {
						F.line = 955;
						n_153254 = -1;
						}
						
						F.line = 2664;
						res_233492 = subInt(res_233492, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_153252;

}

function escape_json_unquoted_201723(s_201725, result_201727, result_201727_Idx) {
	var F={procname:"json.escapeJsonUnquoted",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 599;
			var c_201729 = 0;
			F.line = 202;
			var i_232639 = 0;
			F.line = 203;
			var l_232640 = (s_201725 != null ? s_201725.length : 0);
			L2: do {
				F.line = 204;
					L3: while (true) {
					if (!(i_232639 < l_232640)) break L3;
						F.line = 599;
						c_201729 = s_201725[chckIndx(i_232639, 0, (s_201725 != null ? s_201725.length : 0)+0-1)-0];
						F.line = 600;
						switch (c_201729) {
						case 10:
							F.line = 601;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat(makeNimstrLit("\\n")); } else { result_201727[result_201727_Idx] = makeNimstrLit("\\n"); };
							break;
						case 8:
							F.line = 602;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat(makeNimstrLit("\\b")); } else { result_201727[result_201727_Idx] = makeNimstrLit("\\b"); };
							break;
						case 12:
							F.line = 603;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat(makeNimstrLit("\\f")); } else { result_201727[result_201727_Idx] = makeNimstrLit("\\f"); };
							break;
						case 9:
							F.line = 604;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat(makeNimstrLit("\\t")); } else { result_201727[result_201727_Idx] = makeNimstrLit("\\t"); };
							break;
						case 11:
							F.line = 605;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat(makeNimstrLit("\\v")); } else { result_201727[result_201727_Idx] = makeNimstrLit("\\v"); };
							break;
						case 13:
							F.line = 606;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat(makeNimstrLit("\\r")); } else { result_201727[result_201727_Idx] = makeNimstrLit("\\r"); };
							break;
						case 34:
							F.line = 607;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat(makeNimstrLit("\\\"")); } else { result_201727[result_201727_Idx] = makeNimstrLit("\\\""); };
							break;
						case 0:
						case 1:
						case 2:
						case 3:
						case 4:
						case 5:
						case 6:
						case 7:
							F.line = 608;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat((makeNimstrLit("\\u000") || []).concat(cstrToNimstr((c_201729)+"") || [])); } else { result_201727[result_201727_Idx] = (makeNimstrLit("\\u000") || []).concat(cstrToNimstr((c_201729)+"") || []).slice(); };
							break;
						case 14:
						case 15:
						case 16:
						case 17:
						case 18:
						case 19:
						case 20:
						case 21:
						case 22:
						case 23:
						case 24:
						case 25:
						case 26:
						case 27:
						case 28:
						case 29:
						case 30:
						case 31:
							F.line = 609;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat((makeNimstrLit("\\u00") || []).concat(nsuToHex(c_201729, 2) || [])); } else { result_201727[result_201727_Idx] = (makeNimstrLit("\\u00") || []).concat(nsuToHex(c_201729, 2) || []).slice(); };
							break;
						case 92:
							F.line = 610;
							if (result_201727[result_201727_Idx] != null) { result_201727[result_201727_Idx] = (result_201727[result_201727_Idx]).concat(makeNimstrLit("\\\\")); } else { result_201727[result_201727_Idx] = makeNimstrLit("\\\\"); };
							break;
						default: 
							F.line = 611;
							if (result_201727[result_201727_Idx] != null) { addChar(result_201727[result_201727_Idx], c_201729); } else { result_201727[result_201727_Idx] = [c_201729]; };
							break;
						}
						F.line = 206;
						i_232639 = addInt(i_232639, 1);
						if (!(((s_201725 != null ? s_201725.length : 0) == l_232640))) {
						F.line = 207;
						failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/system/iterators.nim(207, 11) `len(a) == L` the length of the string changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function escape_json_201776(s_201778, result_201780, result_201780_Idx) {
	var F={procname:"json.escapeJson",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 621;
		if (result_201780[result_201780_Idx] != null) { result_201780[result_201780_Idx] = (result_201780[result_201780_Idx]).concat(makeNimstrLit("\"")); } else { result_201780[result_201780_Idx] = makeNimstrLit("\""); };
		F.line = 622;
		escape_json_unquoted_201723(s_201778, result_201780, result_201780_Idx);
		F.line = 623;
		if (result_201780[result_201780_Idx] != null) { result_201780[result_201780_Idx] = (result_201780[result_201780_Idx]).concat(makeNimstrLit("\"")); } else { result_201780[result_201780_Idx] = makeNimstrLit("\""); };
	framePtr = F.prev;

	
}

function to_pretty_201819(result_201822, result_201822_Idx, node_201823, indent_201824, ml_201826, lst_arr_201827, curr_indent_201828) {
				var Tmp1;
				var Tmp3;
			var Tmp6;
			var Tmp7;
			var Tmp8;
			var Tmp9;
				var Tmp10;
				var Tmp11;
				var Tmp12;
				var Tmp14;
				var Tmp15;
							var Tmp18;
							var Tmp19;

	var F={procname:"json.toPretty",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 632;
		switch (node_201823.kind) {
		case 5:
			if (lst_arr_201827) {
			F.line = 634;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			}
			
				var Tmp1 = node_201823;
				if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			if ((0 < len_193965(Tmp1.fields))) {
			F.line = 636;
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit("{")); } else { result_201822[result_201822_Idx] = makeNimstrLit("{"); };
			F.line = 637;
			nl_201705(result_201822, result_201822_Idx, ml_201826);
			F.line = 638;
			var i_201966 = 0;
			L2: do {
				F.line = 639;
				var key_201975 = null;
				F.line = 639;
				var val_201976 = null;
				F.line = 1621;
				var colontmp__232618 = {data: null, counter: 0, first: 0, last: 0};
				F.line = 639;
				var Tmp3 = node_201823;
				if (ConstSet4[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
				nimCopy(colontmp__232618, Tmp3.fields, NTI186067);
				F.line = 1647;
				var l_232620 = len_193965(colontmp__232618);
				if ((0 < colontmp__232618.counter)) {
				F.line = 1258;
				var h_232621 = colontmp__232618.first;
				L4: do {
					F.line = 1259;
						L5: while (true) {
						if (!(0 <= h_232621)) break L5;
							F.line = 1260;
							var nxt_232623 = colontmp__232618.data[chckIndx(h_232621, 0, (colontmp__232618.data != null ? colontmp__232618.data.length : 0)+0-1)-0].Field1;
							if (is_filled_170018(colontmp__232618.data[chckIndx(h_232621, 0, (colontmp__232618.data != null ? colontmp__232618.data.length : 0)+0-1)-0].Field0)) {
							F.line = 639;
							key_201975 = colontmp__232618.data[chckIndx(h_232621, 0, (colontmp__232618.data != null ? colontmp__232618.data.length : 0)+0-1)-0].Field2;
							F.line = 1649;
							val_201976 = colontmp__232618.data[chckIndx(h_232621, 0, (colontmp__232618.data != null ? colontmp__232618.data.length : 0)+0-1)-0].Field3;
							if ((0 < i_201966)) {
							F.line = 641;
							if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit(",")); } else { result_201822[result_201822_Idx] = makeNimstrLit(","); };
							F.line = 642;
							nl_201705(result_201822, result_201822_Idx, ml_201826);
							}
							
							F.line = 643;
							i_201966 = addInt(i_201966, 1);
							F.line = 645;
							indent_201668(result_201822, result_201822_Idx, new_indent_201686(curr_indent_201828, indent_201824, ml_201826));
							F.line = 646;
							escape_json_201776(key_201975, result_201822, result_201822_Idx);
							F.line = 647;
							if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit(": ")); } else { result_201822[result_201822_Idx] = makeNimstrLit(": "); };
							F.line = 648;
							to_pretty_201819(result_201822, result_201822_Idx, val_201976, indent_201824, ml_201826, false, new_indent_201686(curr_indent_201828, indent_201824, ml_201826));
							if (!((len_193965(colontmp__232618) == l_232620))) {
							F.line = 1650;
							failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/collections/tables.nim(1650, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							F.line = 1263;
							h_232621 = nxt_232623;
						}
				} while(false);
				}
				
			} while(false);
			F.line = 650;
			nl_201705(result_201822, result_201822_Idx, ml_201826);
			F.line = 651;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			F.line = 652;
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit("}")); } else { result_201822[result_201822_Idx] = makeNimstrLit("}"); };
			}
			else {
				F.line = 654;
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit("{}")); } else { result_201822[result_201822_Idx] = makeNimstrLit("{}"); };
			}
			
			break;
		case 4:
			if (lst_arr_201827) {
			F.line = 656;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			}
			
			F.line = 657;
			var Tmp6 = node_201823;
			if (ConstSet5[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			escape_json_201776(Tmp6.str, result_201822, result_201822_Idx);
			break;
		case 2:
			if (lst_arr_201827) {
			F.line = 659;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			}
			
			F.line = 660;
			var Tmp7 = node_201823;
			if (ConstSet6[Tmp7.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(cstrToNimstr((Tmp7.num)+"")); } else { result_201822[result_201822_Idx] = cstrToNimstr((Tmp7.num)+"").slice(); };
			break;
		case 3:
			if (lst_arr_201827) {
			F.line = 663;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			}
			
			F.line = 665;
			var Tmp8 = node_201823;
			if (ConstSet7[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fnum\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(cstrToNimstr((Tmp8.fnum)+"")); } else { result_201822[result_201822_Idx] = cstrToNimstr((Tmp8.fnum)+"").slice(); };
			break;
		case 1:
			if (lst_arr_201827) {
			F.line = 668;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			}
			
			F.line = 669;
				var Tmp10 = node_201823;
				if (ConstSet8[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("\'bval\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			if (Tmp10.bval) {
			Tmp9 = makeNimstrLit("true");
			}
			else {
			Tmp9 = makeNimstrLit("false");
			}
			
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(Tmp9); } else { result_201822[result_201822_Idx] = Tmp9.slice(); };
			break;
		case 6:
			if (lst_arr_201827) {
			F.line = 671;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			}
			
				var Tmp11 = node_201823;
				if (ConstSet9[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			if (!((((Tmp12 = Tmp11.elems, Tmp12) != null ? Tmp12.length : 0) == 0))) {
			F.line = 673;
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit("[")); } else { result_201822[result_201822_Idx] = makeNimstrLit("["); };
			F.line = 674;
			nl_201705(result_201822, result_201822_Idx, ml_201826);
			L13: do {
				F.line = 675;
				var i_202223 = 0;
				F.line = 2699;
				var colontmp__232625 = 0;
				F.line = 675;
				var Tmp14 = node_201823;
				if (ConstSet10[Tmp14.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
				colontmp__232625 = subInt(((Tmp15 = Tmp14.elems, Tmp15) != null ? Tmp15.length : 0), 1);
				F.line = 2710;
				var res_232626 = 0;
				L16: do {
					F.line = 2711;
						L17: while (true) {
						if (!(res_232626 <= colontmp__232625)) break L17;
							F.line = 675;
							i_202223 = res_232626;
							if ((0 < i_202223)) {
							F.line = 677;
							if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit(",")); } else { result_201822[result_201822_Idx] = makeNimstrLit(","); };
							F.line = 678;
							nl_201705(result_201822, result_201822_Idx, ml_201826);
							}
							
							F.line = 679;
							var Tmp18 = node_201823;
							if (ConstSet11[Tmp18.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
							to_pretty_201819(result_201822, result_201822_Idx, (Tmp19 = Tmp18.elems, Tmp19)[chckIndx(i_202223, 0, (Tmp19 != null ? Tmp19.length : 0)+0-1)-0], indent_201824, ml_201826, true, new_indent_201686(curr_indent_201828, indent_201824, ml_201826));
							F.line = 2713;
							res_232626 = addInt(res_232626, 1);
						}
				} while(false);
			} while(false);
			F.line = 681;
			nl_201705(result_201822, result_201822_Idx, ml_201826);
			F.line = 682;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			F.line = 683;
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit("]")); } else { result_201822[result_201822_Idx] = makeNimstrLit("]"); };
			}
			else {
				F.line = 684;
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit("[]")); } else { result_201822[result_201822_Idx] = makeNimstrLit("[]"); };
			}
			
			break;
		case 0:
			if (lst_arr_201827) {
			F.line = 686;
			indent_201668(result_201822, result_201822_Idx, curr_indent_201828);
			}
			
			F.line = 687;
			if (result_201822[result_201822_Idx] != null) { result_201822[result_201822_Idx] = (result_201822[result_201822_Idx]).concat(makeNimstrLit("null")); } else { result_201822[result_201822_Idx] = makeNimstrLit("null"); };
			break;
		}
	framePtr = F.prev;

	
}

function pretty_202240(node_202242, indent_202243) {
	var result_202245 = [null];

	var F={procname:"json.pretty",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 708;
		result_202245[0] = nimCopy(null, [], NTI138);
		F.line = 709;
		to_pretty_201819(result_202245, 0, node_202242, indent_202243, true, false, 0);
	framePtr = F.prev;

	return result_202245[0];

}

function raw_get_195333(t_195337, key_195338, hc_195339, hc_195339_Idx) {
						var Tmp3;

	var result_195340 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_195339[hc_195339_Idx] = hash_166814(key_195338);
		if ((hc_195339[hc_195339_Idx] == 0)) {
		F.line = 56;
		hc_195339[hc_195339_Idx] = 314159265;
		}
		
		if (((t_195337.data != null ? t_195337.data.length : 0) == 0)) {
		F.line = 38;
		result_195340 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_195482 = (hc_195339[hc_195339_Idx] & (t_195337.data != null ? (t_195337.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_170018(t_195337.data[chckIndx(h_195482, 0, (t_195337.data != null ? t_195337.data.length : 0)+0-1)-0].Field0)) break L2;
						if (!(t_195337.data[chckIndx(h_195482, 0, (t_195337.data != null ? t_195337.data.length : 0)+0-1)-0].Field0 == hc_195339[hc_195339_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_195337.data[chckIndx(h_195482, 0, (t_195337.data != null ? t_195337.data.length : 0)+0-1)-0].Field2, key_195338);						}					if (Tmp3) {
					F.line = 46;
					result_195340 = h_195482;
					break BeforeRet;
					}
					
					F.line = 47;
					h_195482 = next_try_170035(h_195482, (t_195337.data != null ? (t_195337.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_195340 = subInt(-1, h_195482);
	} while (false);
	framePtr = F.prev;

	return result_195340;

}

function HEX5BHEX5D_195322(t_195328, key_195329) {
	var result_195331 = null;
	var result_195331_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 259;
		var hcHEX60gensym171648_195332 = [0];
		F.line = 260;
		var indexHEX60gensym171649_195950 = raw_get_195333(t_195328, key_195329, hcHEX60gensym171648_195332, 0);
		if ((0 <= indexHEX60gensym171649_195950)) {
		F.line = 261;
		result_195331 = t_195328.data[chckIndx(indexHEX60gensym171649_195950, 0, (t_195328.data != null ? t_195328.data.length : 0)+0-1)-0]; result_195331_Idx = "Field3";
		}
		else {
			F.line = 3478;
			var eHEX60gensym196203_196403 = null;
			F.line = 3481;
			eHEX60gensym196203_196403 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 264;
			eHEX60gensym196203_196403.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_195329 || []), NTI138);
			F.line = 3474;
			eHEX60gensym196203_196403.parent = null;
			F.line = 264;
			raiseException(eHEX60gensym196203_196403, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_195331, result_195331_Idx];

}

function HEX5BHEX5D_196856(node_196858, name_196859) {
		var Tmp1;
		var Tmp2;

	var result_196860 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!(!((node_196858 == null)))) {
		F.line = 476;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(476, 9) `not isNil(node)` "));
		}
		
		if (!((node_196858.kind == 5))) {
		F.line = 477;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(477, 9) `node.kind == JObject` "));
		}
		
		F.line = 480;
		var Tmp1 = node_196858;
		if (ConstSet12[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		result_196860 = (Tmp2 = HEX5BHEX5D_195322(Tmp1.fields, name_196859), Tmp2)[0][Tmp2[1]];
	framePtr = F.prev;

	return result_196860;

}

function has_key_195126(t_195131, key_195132) {
	var result_195133 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1378;
		var hc_195134 = [0];
		F.line = 1379;
		result_195133 = (0 <= raw_get_188021(t_195131, key_195132, hc_195134, 0));
	framePtr = F.prev;

	return result_195133;

}

function has_key_197815(node_197817, key_197818) {
		var Tmp1;

	var result_197819 = false;

	var F={procname:"json.hasKey",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((node_197817.kind == 5))) {
		F.line = 492;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(492, 9) `node.kind == JObject` "));
		}
		
		F.line = 493;
		var Tmp1 = node_197817;
		if (ConstSet14[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		result_197819 = has_key_195126(Tmp1.fields, key_197818);
	framePtr = F.prev;

	return result_197819;

}

function HEX5BHEX5D_67285(s_67289, x_67291) {
	var result_67292 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3977;
		var a_67401 = x_67291.a;
		F.line = 3978;
		var l_67601 = addInt(subInt(x_67291.b, a_67401), 1);
		F.line = 3979;
		result_67292 = nimCopy(null, mnewString(chckRange(l_67601, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 3980;
			var i_67609 = 0;
			F.line = 2739;
			var i_233532 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_233532 < l_67601)) break L3;
						F.line = 3980;
						i_67609 = i_233532;
						F.line = 3980;
						result_67292[chckIndx(i_67609, 0, (result_67292 != null ? result_67292.length : 0)+0-1)-0] = s_67289[chckIndx(addInt(i_67609, a_67401), 0, (s_67289 != null ? s_67289.length : 0)+0-1)-0];
						F.line = 2742;
						i_233532 = addInt(i_233532, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_67292;

}

function HEX2EHEX2E_67220(a_67224, b_67225) {
	var result_67231 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 502;
		nimCopy(result_67231, {a: a_67224, b: b_67225}, NTI67228);
	framePtr = F.prev;

	return result_67231;

}

function remove_double_quotation_230128(strHEX60gensym230014_230130) {
	var result_230131 = null;

	var F={procname:"randomWalk.removeDoubleQuotation",prev:framePtr,filename:"Blackvas.nim",line:0};
	framePtr = F;
		F.line = 49;
		result_230131 = nimCopy(null, HEX5BHEX5D_67285(strHEX60gensym230014_230130, HEX2EHEX2E_67220(1, subInt((strHEX60gensym230014_230130 != null ? strHEX60gensym230014_230130.length : 0), 2))), NTI138);
	framePtr = F.prev;

	return result_230131;

}

function get_float_186796(n_186798, default_186799) {
			var Tmp1;
			var Tmp2;

	var result_186800 = 0.0;

	var F={procname:"json.getFloat",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((n_186798 == null)) {
		F.line = 245;
		result_186800 = default_186799;
		break BeforeRet;
		}
		
		F.line = 246;
		switch (n_186798.kind) {
		case 3:
			F.line = 247;
			var Tmp1 = n_186798;
			if (ConstSet15[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fnum\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			result_186800 = Tmp1.fnum;
			break BeforeRet;
			break;
		case 2:
			F.line = 248;
			var Tmp2 = n_186798;
			if (ConstSet16[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			result_186800 = Tmp2.num;
			break BeforeRet;
			break;
		default: 
			F.line = 249;
			result_186800 = default_186799;
			break BeforeRet;
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_186800;

}

function to_float_10657(i_10659) {
	var result_10660 = 0.0;

	var F={procname:"system.toFloat",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 2288;
		result_10660 = i_10659;
	framePtr = F.prev;

	return result_10660;

}

function ten_to_the_power_of_25326(b_25328) {
	var result_25329 = 0.0;

	var F={procname:"system.tenToThePowerOf",prev:framePtr,filename:"jssys.nim",line:0};
	framePtr = F;
		F.line = 669;
		var b_25330 = b_25328;
		F.line = 670;
		var a_25331 = 1.0000000000000000e+01;
		F.line = 671;
		result_25329 = 1.0000000000000000e+00;
		L1: do {
			F.line = 672;
				L2: while (true) {
				if (!true) break L2;
					if (((b_25330 & 1) == 1)) {
					F.line = 674;
					result_25329 = (result_25329 * a_25331);
					}
					
					F.line = 675;
					b_25330 = (b_25330 >> 1);
					if ((b_25330 == 0)) {
					F.line = 676;
					break L1;
					}
					
					F.line = 677;
					a_25331 = (a_25331 * a_25331);
				}
		} while(false);
	framePtr = F.prev;

	return result_25329;

}

function npuParseFloat(s_57223, number_57225, number_57225_Idx, start_57226) {
	var result_57228 = 0;

	var F={procname:"parseutils.parseFloat",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 571;
		var bf_57229 = [0.0];
		F.line = 572;
		result_57228 = nimParseBiggestFloat(s_57223, bf_57229, 0, start_57226);
		if (!((result_57228 == 0))) {
		F.line = 574;
		number_57225[number_57225_Idx] = bf_57229[0];
		}
		
	framePtr = F.prev;

	return result_57228;

}

function nsuParseFloat(s_154225) {
			var Tmp1;

	var result_154226 = [0.0];

	var F={procname:"strutils.parseFloat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1138;
		var l_154228 = npuParseFloat(s_154225, result_154226, 0, 0);
			if (!((l_154228 == (s_154225 != null ? s_154225.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_154228 == 0);			}		if (Tmp1) {
		F.line = 3478;
		var eHEX60gensym154231_154403 = null;
		F.line = 3481;
		eHEX60gensym154231_154403 = {m_type: NTI3652, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 1140;
		eHEX60gensym154231_154403.message = nimCopy(null, (makeNimstrLit("invalid float: ") || []).concat(s_154225 || []), NTI138);
		F.line = 3474;
		eHEX60gensym154231_154403.parent = null;
		F.line = 1140;
		raiseException(eHEX60gensym154231_154403, "ValueError");
		}
		
	framePtr = F.prev;

	return result_154226[0];

}

function draw_shape_230179(contextHEX60gensym230015_230181, shapes_arrHEX60gensym230016_230182, base_xHEX60gensym230017_230183, base_yHEX60gensym230018_230184) {
				var Tmp3;

	var F={procname:"randomWalk.drawShape",prev:framePtr,filename:"Blackvas.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 51;
			var objHEX60gensym230019_230185 = null;
			if (!((shapes_arrHEX60gensym230016_230182.kind == 6))) {
			F.line = 758;
			failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(758, 10) `node.kind == JArray` "));
			}
			
			L2: do {
				F.line = 759;
				var i_233540 = null;
				F.line = 182;
				var colontmp__233541 = null;
				F.line = 759;
				var Tmp3 = shapes_arrHEX60gensym230016_230182;
				if (ConstSet18[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
				colontmp__233541 = Tmp3.elems;
				F.line = 184;
				var i_233542 = 0;
				F.line = 185;
				var l_233543 = (colontmp__233541 != null ? colontmp__233541.length : 0);
				L4: do {
					F.line = 186;
						L5: while (true) {
						if (!(i_233542 < l_233543)) break L5;
							F.line = 759;
							i_233540 = colontmp__233541[chckIndx(i_233542, 0, (colontmp__233541 != null ? colontmp__233541.length : 0)+0-1)-0];
							F.line = 51;
							objHEX60gensym230019_230185 = i_233540;
							F.line = 52;
							var raw_obj_funcHEX60gensym230020_230187 = pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("func")), 2);
							F.line = 53;
							var obj_funcHEX60gensym230021_230222 = HEX5BHEX5D_67285(raw_obj_funcHEX60gensym230020_230187, HEX2EHEX2E_67220(1, subInt((raw_obj_funcHEX60gensym230020_230187 != null ? raw_obj_funcHEX60gensym230020_230187.length : 0), 2)));
							F.line = 54;
							switch (toJSStr(obj_funcHEX60gensym230021_230222)) {
							case "style_color":
								F.line = 56;
								var colorHEX60gensym230022_230224 = remove_double_quotation_230128(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("color")), 2));
								F.line = 57;
								contextHEX60gensym230015_230181.fillStyle = toJSStr(colorHEX60gensym230022_230224);
								break;
							case "rect":
								F.line = 60;
								var xHEX60gensym230023_230226 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("x")), 2)) + base_xHEX60gensym230017_230183);
								F.line = 61;
								var yHEX60gensym230024_230228 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("y")), 2)) + base_yHEX60gensym230018_230184);
								F.line = 62;
								var widthHEX60gensym230025_230230 = nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("width")), 2));
								F.line = 63;
								var heightHEX60gensym230026_230232 = nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("height")), 2));
								F.line = 64;
								contextHEX60gensym230015_230181.beginPath();
								F.line = 65;
								contextHEX60gensym230015_230181.rect(xHEX60gensym230023_230226, yHEX60gensym230024_230228, widthHEX60gensym230025_230230, heightHEX60gensym230026_230232);
								F.line = 66;
								contextHEX60gensym230015_230181.fill();
								break;
							case "text":
								F.line = 69;
								var valueHEX60gensym230027_230234 = remove_double_quotation_230128(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("value")), 2));
								F.line = 70;
								var xHEX60gensym230028_230236 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("x")), 2)) + base_xHEX60gensym230017_230183);
								F.line = 71;
								var yHEX60gensym230029_230238 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("y")), 2)) + base_yHEX60gensym230018_230184);
								F.line = 72;
								contextHEX60gensym230015_230181.strokeText(toJSStr(valueHEX60gensym230027_230234), xHEX60gensym230028_230236, yHEX60gensym230029_230238);
								F.line = 73;
								contextHEX60gensym230015_230181.fillText(toJSStr(valueHEX60gensym230027_230234), xHEX60gensym230028_230236, yHEX60gensym230029_230238);
								break;
							case "triangle":
								F.line = 76;
								var v1xHEX60gensym230030_230240 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("x1")), 2)) + base_xHEX60gensym230017_230183);
								F.line = 77;
								var v1yHEX60gensym230031_230242 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("y1")), 2)) + base_yHEX60gensym230018_230184);
								F.line = 78;
								var v2xHEX60gensym230032_230244 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("x2")), 2)) + base_xHEX60gensym230017_230183);
								F.line = 79;
								var v2yHEX60gensym230033_230246 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("y2")), 2)) + base_yHEX60gensym230018_230184);
								F.line = 80;
								var v3xHEX60gensym230034_230248 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("x3")), 2)) + base_xHEX60gensym230017_230183);
								F.line = 81;
								var v3yHEX60gensym230035_230250 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("y3")), 2)) + base_yHEX60gensym230018_230184);
								F.line = 82;
								contextHEX60gensym230015_230181.beginPath();
								F.line = 83;
								contextHEX60gensym230015_230181.moveTo(v1xHEX60gensym230030_230240, v1yHEX60gensym230031_230242);
								F.line = 84;
								contextHEX60gensym230015_230181.lineTo(v2xHEX60gensym230032_230244, v2yHEX60gensym230033_230246);
								F.line = 85;
								contextHEX60gensym230015_230181.lineTo(v3xHEX60gensym230034_230248, v3yHEX60gensym230035_230250);
								F.line = 86;
								contextHEX60gensym230015_230181.fill();
								break;
							case "circle":
								F.line = 89;
								var xHEX60gensym230036_230252 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("x")), 2)) + base_xHEX60gensym230017_230183);
								F.line = 90;
								var yHEX60gensym230037_230254 = (nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("y")), 2)) + base_yHEX60gensym230018_230184);
								F.line = 91;
								var rHEX60gensym230038_230256 = nsuParseFloat(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230019_230185, makeNimstrLit("r")), 2));
								F.line = 92;
								contextHEX60gensym230015_230181.beginPath();
								F.line = 93;
								contextHEX60gensym230015_230181.arc(xHEX60gensym230036_230252, yHEX60gensym230037_230254, rHEX60gensym230038_230256, 0.0, 6.2831853071795862e+00, false);
								F.line = 94;
								contextHEX60gensym230015_230181.fill();
								break;
							default: 
								break;
							}
							F.line = 188;
							i_233542 = addInt(i_233542, 1);
							if (!(((colontmp__233541 != null ? colontmp__233541.length : 0) == l_233543))) {
							F.line = 189;
							failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function draw_230271(contextHEX60gensym230039_230273) {
				var Tmp3;
										var Tmp9;

	var F={procname:"randomWalk.draw",prev:framePtr,filename:"Blackvas.nim",line:0};
	framePtr = F;
		F.line = 97;
		contextHEX60gensym230039_230273.clearRect(0.0, 0.0, canvas_230056[0].width, canvas_230056[0].height);
		F.line = 98;
		var virtual_canvas_objectsHEX60gensym230040_230274 = HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("virtual_canvas"));
		F.line = 99;
		var shapes_objectsHEX60gensym230041_230275 = HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("shapes"));
		F.line = 100;
		var style_objectsHEX60gensym230042_230276 = HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles"));
		L1: do {
			F.line = 101;
			var itemHEX60gensym230043_230278 = {Field0: null, Field1: null};
			if (!((virtual_canvas_objectsHEX60gensym230040_230274.kind == 5))) {
			F.line = 771;
			failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(771, 10) `node.kind == JObject` "));
			}
			
			L2: do {
				F.line = 772;
				var key_233521 = null;
				F.line = 772;
				var val_233522 = null;
				F.line = 1621;
				var colontmp__233523 = {data: null, counter: 0, first: 0, last: 0};
				F.line = 772;
				var Tmp3 = virtual_canvas_objectsHEX60gensym230040_230274;
				if (ConstSet13[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
				nimCopy(colontmp__233523, Tmp3.fields, NTI186067);
				F.line = 1647;
				var l_233524 = len_193965(colontmp__233523);
				if ((0 < colontmp__233523.counter)) {
				F.line = 1258;
				var h_233525 = colontmp__233523.first;
				L4: do {
					F.line = 1259;
						L5: while (true) {
						if (!(0 <= h_233525)) break L5;
							F.line = 1260;
							var nxt_233527 = colontmp__233523.data[chckIndx(h_233525, 0, (colontmp__233523.data != null ? colontmp__233523.data.length : 0)+0-1)-0].Field1;
							if (is_filled_170018(colontmp__233523.data[chckIndx(h_233525, 0, (colontmp__233523.data != null ? colontmp__233523.data.length : 0)+0-1)-0].Field0)) {
							F.line = 772;
							key_233521 = colontmp__233523.data[chckIndx(h_233525, 0, (colontmp__233523.data != null ? colontmp__233523.data.length : 0)+0-1)-0].Field2;
							F.line = 1649;
							val_233522 = colontmp__233523.data[chckIndx(h_233525, 0, (colontmp__233523.data != null ? colontmp__233523.data.length : 0)+0-1)-0].Field3;
							F.line = 101;
							nimCopy(itemHEX60gensym230043_230278, {Field0: nimCopy(null, key_233521, NTI138), Field1: val_233522}, NTI203244);
							L6: do {
								if (!(has_key_197815(itemHEX60gensym230043_230278.Field1, makeNimstrLit("shape")))) {
								F.line = 103;
								break L6;
								}
								
								F.line = 104;
								var shape_nameHEX60gensym230044_230281 = remove_double_quotation_230128(pretty_202240(HEX5BHEX5D_196856(itemHEX60gensym230043_230278.Field1, makeNimstrLit("shape")), 2));
								F.line = 106;
								var id_nameHEX60gensym230045_230282 = [];
								F.line = 107;
								var class_nameHEX60gensym230046_230283 = [];
								F.line = 108;
								var base_xHEX60gensym230047_230284 = 0.0;
								F.line = 109;
								var base_yHEX60gensym230048_230285 = 0.0;
								if (has_key_197815(itemHEX60gensym230043_230278.Field1, makeNimstrLit("id"))) {
								F.line = 111;
								id_nameHEX60gensym230045_230282 = nimCopy(null, (makeNimstrLit("#") || []).concat(remove_double_quotation_230128(pretty_202240(HEX5BHEX5D_196856(itemHEX60gensym230043_230278.Field1, makeNimstrLit("id")), 2)) || []), NTI138);
								}
								
								if (has_key_197815(itemHEX60gensym230043_230278.Field1, makeNimstrLit("class"))) {
								F.line = 113;
								class_nameHEX60gensym230046_230283 = nimCopy(null, (makeNimstrLit(".") || []).concat(remove_double_quotation_230128(pretty_202240(HEX5BHEX5D_196856(itemHEX60gensym230043_230278.Field1, makeNimstrLit("class")), 2)) || []), NTI138);
								}
								
								if (has_key_197815(itemHEX60gensym230043_230278.Field1, makeNimstrLit("x"))) {
								F.line = 115;
								base_xHEX60gensym230047_230284 = get_float_186796(HEX5BHEX5D_196856(itemHEX60gensym230043_230278.Field1, makeNimstrLit("x")), 0.0);
								}
								
								if (has_key_197815(itemHEX60gensym230043_230278.Field1, makeNimstrLit("y"))) {
								F.line = 117;
								base_yHEX60gensym230048_230285 = get_float_186796(HEX5BHEX5D_196856(itemHEX60gensym230043_230278.Field1, makeNimstrLit("y")), 0.0);
								}
								
								F.line = 118;
								contextHEX60gensym230039_230273.font = "24px Arial";
								F.line = 119;
								contextHEX60gensym230039_230273.fillStyle = "#000000";
								F.line = 120;
								contextHEX60gensym230039_230273.textAlign = "start";
								F.line = 121;
								var shape_arrayHEX60gensym230049_230294 = HEX5BHEX5D_196856(shapes_objectsHEX60gensym230041_230275, shape_nameHEX60gensym230044_230281);
								F.line = 122;
								var style_array_by_idHEX60gensym230050_230295 = HEX5BHEX5D_196856(style_objectsHEX60gensym230042_230276, id_nameHEX60gensym230045_230282);
								L7: do {
									F.line = 123;
									var objHEX60gensym230051_230296 = null;
									if (!((style_array_by_idHEX60gensym230050_230295.kind == 6))) {
									F.line = 758;
									failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(758, 10) `node.kind == JArray` "));
									}
									
									L8: do {
										F.line = 759;
										var i_233509 = null;
										F.line = 182;
										var colontmp__233510 = null;
										F.line = 759;
										var Tmp9 = style_array_by_idHEX60gensym230050_230295;
										if (ConstSet17[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
										colontmp__233510 = Tmp9.elems;
										F.line = 184;
										var i_233511 = 0;
										F.line = 185;
										var l_233512 = (colontmp__233510 != null ? colontmp__233510.length : 0);
										L10: do {
											F.line = 186;
												L11: while (true) {
												if (!(i_233511 < l_233512)) break L11;
													F.line = 759;
													i_233509 = colontmp__233510[chckIndx(i_233511, 0, (colontmp__233510 != null ? colontmp__233510.length : 0)+0-1)-0];
													F.line = 123;
													objHEX60gensym230051_230296 = i_233509;
													F.line = 125;
													var styleHEX60gensym230052_230298 = remove_double_quotation_230128(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230051_230296, makeNimstrLit("style")), 2));
													F.line = 126;
													var valueHEX60gensym230053_230300 = remove_double_quotation_230128(pretty_202240(HEX5BHEX5D_196856(objHEX60gensym230051_230296, makeNimstrLit("value")), 2));
													F.line = 127;
													switch (toJSStr(styleHEX60gensym230052_230298)) {
													case "color":
														F.line = 129;
														contextHEX60gensym230039_230273.fillStyle = toJSStr(valueHEX60gensym230053_230300);
														break;
													default: 
														break;
													}
													F.line = 188;
													i_233511 = addInt(i_233511, 1);
													if (!(((colontmp__233510 != null ? colontmp__233510.length : 0) == l_233512))) {
													F.line = 189;
													failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
													}
													
												}
										} while(false);
									} while(false);
								} while(false);
								F.line = 130;
								draw_shape_230179(contextHEX60gensym230039_230273, shape_arrayHEX60gensym230049_230294, base_xHEX60gensym230047_230284, base_yHEX60gensym230048_230285);
							} while(false);
							if (!((len_193965(colontmp__233523) == l_233524))) {
							F.line = 1650;
							failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/collections/tables.nim(1650, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							F.line = 1263;
							h_233525 = nxt_233527;
						}
				} while(false);
				}
				
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function HEX25_191961(s_191963) {
	var result_191964 = null;

	var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 294;
		result_191964 = {kind: 4, str: nimCopy(null, s_191963, NTI138), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_191964;

}

function HEX25_192046(n_192048) {
	var result_192049 = null;

	var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 314;
		result_192049 = {kind: 3, fnum: n_192048, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_192049;

}

function add_186995(father_186997, child_186998) {
		var Tmp1;
		var Tmp2;

	var F={procname:"json.add",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((father_186997.kind == 6))) {
		F.line = 284;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(284, 10) `father.kind == JArray` "));
		}
		
		F.line = 285;
		var Tmp1 = father_186997;
		if (ConstSet26[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_186998); } else { Tmp2 = [child_186998]; };
	framePtr = F.prev;

	
}

function add_187222(obj_187224, key_187225, val_187226) {
		var Tmp1;

	var F={procname:"json.add",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((obj_187224.kind == 5))) {
		F.line = 289;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(289, 10) `obj.kind == JObject` "));
		}
		
		F.line = 290;
		var Tmp1 = obj_187224;
		if (ConstSet27[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		HEX5BHEX5DHEX3D_187511(Tmp1.fields, key_187225, val_187226);
	framePtr = F.prev;

	
}

function init_table_231829(initial_size_231833) {
	var result_231849 = {data: null, counter: 0};

	var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_144062(initial_size_231833))) {
		F.line = 118;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_231849.counter = 0;
		F.line = 120;
		result_231849.data = new Array(chckRange(initial_size_231833, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_231833, 0, 2147483647);++i) {result_231849.data[i]={Field0: 0, Field1: null, Field2: {data: null, counter: 0}};}	framePtr = F.prev;

	return result_231849;

}

function HEX5BHEX5DHEX3D_192414(obj_192416, key_192417, val_192418) {
		var Tmp1;

	var F={procname:"json.[]=",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((obj_192416.kind == 5))) {
		F.line = 358;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(358, 9) `obj.kind == JObject` "));
		}
		
		F.line = 359;
		var Tmp1 = obj_192416;
		if (ConstSet28[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		HEX5BHEX5DHEX3D_187511(Tmp1.fields, key_192417, val_192418);
	framePtr = F.prev;

	
}

function new_jstring_186087(s_186089) {
	var result_186090 = null;

	var F={procname:"json.newJString",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 186;
		result_186090 = {kind: 4, str: nimCopy(null, s_186089, NTI138), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_186090;

}

function get_str_186688(n_186690, default_186691) {
			var Tmp1;
			var Tmp2;

	var result_186692 = null;

	var F={procname:"json.getStr",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if ((n_186690 == null)) Tmp1 = true; else {				Tmp1 = !((n_186690.kind == 4));			}		if (Tmp1) {
		F.line = 220;
		result_186692 = nimCopy(null, default_186691, NTI138);
		break BeforeRet;
		}
		else {
			F.line = 221;
			var Tmp2 = n_186690;
			if (ConstSet29[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
			result_186692 = nimCopy(null, Tmp2.str, NTI138);
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_186692;

}

function get_vas_context_230546(shape_instance_nameHEX60gensym230466_230548) {
	var result_230549 = {shapeId: null, x: 0.0, y: 0.0};

	var F={procname:"randomWalk.getVasContext",prev:framePtr,filename:"shapes.nim",line:0};
	framePtr = F;
		F.line = 33;
		var shape_idHEX60gensym230467_230550 = [];
		F.line = 34;
		var xHEX60gensym230468_230551 = 0.0;
		F.line = 35;
		var yHEX60gensym230469_230552 = 0.0;
		F.line = 36;
		var shape_instanceHEX60gensym230470_230553 = HEX5BHEX5D_196856(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("virtual_canvas")), shape_instance_nameHEX60gensym230466_230548);
		if (has_key_197815(shape_instanceHEX60gensym230470_230553, makeNimstrLit("id"))) {
		F.line = 38;
		shape_idHEX60gensym230467_230550 = nimCopy(null, get_str_186688(HEX5BHEX5D_196856(shape_instanceHEX60gensym230470_230553, makeNimstrLit("id")), []), NTI138);
		}
		
		if (has_key_197815(shape_instanceHEX60gensym230470_230553, makeNimstrLit("x"))) {
		F.line = 40;
		xHEX60gensym230468_230551 = get_float_186796(HEX5BHEX5D_196856(shape_instanceHEX60gensym230470_230553, makeNimstrLit("x")), 0.0);
		}
		
		if (has_key_197815(shape_instanceHEX60gensym230470_230553, makeNimstrLit("y"))) {
		F.line = 42;
		yHEX60gensym230469_230552 = get_float_186796(HEX5BHEX5D_196856(shape_instanceHEX60gensym230470_230553, makeNimstrLit("y")), 0.0);
		}
		
		F.line = 44;
		nimCopy(result_230549, {shapeId: nimCopy(null, shape_idHEX60gensym230467_230550, NTI138), x: xHEX60gensym230468_230551, y: yHEX60gensym230469_230552}, NTI230542);
	framePtr = F.prev;

	return result_230549;

}

function HEX2BHEX3D_159861(x_159865, x_159865_Idx, y_159866) {
	var F={procname:"+=.+=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4147;
		x_159865[x_159865_Idx] = (x_159865[x_159865_Idx] + y_159866);
	framePtr = F.prev;

	
}

function rotl_212230(x_212232, k_212233) {
	var result_212234 = 0;

	var F={procname:"random.rotl",prev:framePtr,filename:"random.nim",line:0};
	framePtr = F;
		F.line = 122;
		result_212234 = ((x_212232 << k_212233) | ((x_212232 >>> 0) >>> ((64 - k_212233) >>> 0)));
	framePtr = F.prev;

	return result_212234;

}

function next_212270(r_212273) {
	var result_212274 = 0;

	var F={procname:"random.next",prev:framePtr,filename:"random.nim",line:0};
	framePtr = F;
		F.line = 139;
		var s0_212275 = r_212273.a0;
		F.line = 140;
		var s1_212276 = r_212273.a1;
		F.line = 141;
		result_212274 = ((s0_212275 + s1_212276) >>> 0);
		F.line = 142;
		s1_212276 = (s1_212276 ^ s0_212275);
		F.line = 143;
		r_212273.a0 = ((rotl_212230(s0_212275, 55) ^ s1_212276) ^ (s1_212276 << 14));
		F.line = 144;
		r_212273.a1 = rotl_212230(s1_212276, 36);
	framePtr = F.prev;

	return result_212274;

}

function rand_212706(r_212709, max_212732) {
	var result_212733 = 0.0;

	var F={procname:"random.rand",prev:framePtr,filename:"random.nim",line:0};
	framePtr = F;
		F.line = 289;
		var x_212734 = next_212270(r_212709);
		F.line = 291;
		result_212733 = ((x_212734 / 4294967295) * max_212732);
	framePtr = F.prev;

	return result_212733;

}

function rand_212820(max_212822) {
	var result_212823 = 0.0;

	var F={procname:"random.rand",prev:framePtr,filename:"random.nim",line:0};
	framePtr = F;
		F.line = 297;
		result_212823 = rand_212706(state_212005[0], chckRange(max_212822, 0.0, Infinity));
	framePtr = F.prev;

	return result_212823;

}

function random_walk1_232514(context_232517) {
	var F={procname:"randomWalk.randomWalk1",prev:framePtr,filename:"randomWalk.nim",line:0};
	framePtr = F;
		F.line = 43;
		HEX2BHEX3D_159861(context_232517, "x", dx_232474[0]);
		F.line = 44;
		HEX2BHEX3D_159861(context_232517, "y", dy_232475[0]);
		F.line = 45;
		var d_pos_232532 = (rand_212820(1.0000000000000000e+01) + 5.0000000000000000e+00);
		if ((context_232517.x <= 0.0)) {
		F.line = 47;
		dx_232474[0] = d_pos_232532;
		}
		else {
		if ((context_232517.y <= 0.0)) {
		F.line = 49;
		dy_232475[0] = d_pos_232532;
		}
		else {
		if ((width_51005[0] <= (context_232517.x + 2.0000000000000000e+02))) {
		F.line = 51;
		dx_232474[0] = -(d_pos_232532);
		}
		else {
		if ((height_51003[0] <= (context_232517.y + 2.0000000000000000e+02))) {
		F.line = 53;
		dy_232475[0] = -(d_pos_232532);
		}
		}}}
	framePtr = F.prev;

	
}

function new_jfloat_186154(n_186156) {
	var result_186157 = null;

	var F={procname:"json.newJFloat",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 198;
		result_186157 = {kind: 3, fnum: n_186156, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_186157;

}

function restruct_json_230626(shape_instance_nameHEX60gensym230479_230628, vas_contextHEX60gensym230480_230629) {
	var F={procname:"randomWalk.restructJson",prev:framePtr,filename:"shapes.nim",line:0};
	framePtr = F;
		F.line = 55;
		var restructed_shape_jsonHEX60gensym230481_230630 = HEX5BHEX5D_196856(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("virtual_canvas")), shape_instance_nameHEX60gensym230479_230628);
		F.line = 56;
		HEX5BHEX5DHEX3D_192414(restructed_shape_jsonHEX60gensym230481_230630, makeNimstrLit("x"), new_jfloat_186154(vas_contextHEX60gensym230480_230629.x));
		F.line = 57;
		HEX5BHEX5DHEX3D_192414(restructed_shape_jsonHEX60gensym230481_230630, makeNimstrLit("y"), new_jfloat_186154(vas_contextHEX60gensym230480_230629.y));
		if (!(eqStrings(vas_contextHEX60gensym230480_230629.shapeId, []))) {
		F.line = 59;
		HEX5BHEX5DHEX3D_192414(restructed_shape_jsonHEX60gensym230481_230630, makeNimstrLit("id"), new_jstring_186087(vas_contextHEX60gensym230480_230629.shapeId));
		}
		
	framePtr = F.prev;

	
}

function new_seq_232778(len_232781) {
	var result_232783 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_232783 = new Array(len_232781); for (var i=0;i<len_232781;++i) {result_232783[i]=null;}	framePtr = F.prev;

	return result_232783;

}

function get_var_type_205709(x_205711) {
	var result_205712 = 0;

	var F={procname:"json.getVarType",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 887;
		result_205712 = 0;
		F.line = 890;
		switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_205711)))) {
		case "[object Array]":
			F.line = 891;
			result_205712 = 6;
			break BeforeRet;
			break;
		case "[object Object]":
			F.line = 892;
			result_205712 = 5;
			break BeforeRet;
			break;
		case "[object Number]":
			if ((x_205711 % 1.0000000000000000e+00 == 0.0)) {
			F.line = 895;
			result_205712 = 2;
			break BeforeRet;
			}
			else {
				F.line = 897;
				result_205712 = 3;
				break BeforeRet;
			}
			
			break;
		case "[object Boolean]":
			F.line = 898;
			result_205712 = 1;
			break BeforeRet;
			break;
		case "[object Null]":
			F.line = 899;
			result_205712 = 0;
			break BeforeRet;
			break;
		case "[object String]":
			F.line = 900;
			result_205712 = 4;
			break BeforeRet;
			break;
		default: 
			if (true) {
			F.line = 901;
			failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(901, 18) `false` "));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_205712;

}

function len_205829(x_205831) {
	var result_205832 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_205709(x_205831) == 6))) {
		F.line = 904;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(904, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 905;
		      result_205832 = x_205831.length;
    
	framePtr = F.prev;

	return result_205832;

}

function HEX5BHEX5D_206214(x_206216, y_206217) {
	var result_206218 = {};

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_205709(x_206216) == 6))) {
		F.line = 916;
		failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/pure/json.nim(916, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 917;
		      result_206218 = x_206216[y_206217];
    
	framePtr = F.prev;

	return result_206218;

}

function new_jint_186137(n_186139) {
	var result_186140 = null;

	var F={procname:"json.newJInt",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 194;
		result_186140 = {kind: 2, num: n_186139, str: null, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_186140;

}

function new_jbool_186171(b_186173) {
	var result_186174 = null;

	var F={procname:"json.newJBool",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 202;
		result_186174 = {kind: 1, bval: b_186173, str: null, num: 0, fnum: 0.0, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_186174;

}

function new_jnull_186188() {
	var result_186190 = null;

	var F={procname:"json.newJNull",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 206;
		result_186190 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_186190;

}

function convert_object_206414(x_206416) {
	var result_206417 = null;

	var F={procname:"json.convertObject",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 922;
		switch (get_var_type_205709(x_206416)) {
		case 6:
			F.line = 924;
			result_206417 = new_jarray_186657();
			L1: do {
				F.line = 925;
				var i_206425 = 0;
				F.line = 2737;
				var colontmp__233571 = 0;
				F.line = 925;
				colontmp__233571 = len_205829(x_206416);
				F.line = 2739;
				var i_233572 = 0;
				L2: do {
					F.line = 2740;
						L3: while (true) {
						if (!(i_233572 < colontmp__233571)) break L3;
							F.line = 925;
							i_206425 = i_233572;
							F.line = 926;
							add_186995(result_206417, convert_object_206414(HEX5BHEX5D_206214(x_206416, i_206425)));
							F.line = 2742;
							i_233572 = addInt(i_233572, 1);
						}
				} while(false);
			} while(false);
			break;
		case 5:
			F.line = 928;
			result_206417 = new_jobject_186204();
			F.line = 929;
			for (var property in x_206416) {
        if (x_206416.hasOwnProperty(property)) {
      
			F.line = 932;
			var nim_property_206427 = null;
			F.line = 933;
			var nim_value_206428 = {};
			F.line = 934;
			nim_property_206427 = property; nim_value_206428 = x_206416[property];
			F.line = 935;
			HEX5BHEX5DHEX3D_192414(result_206417, cstrToNimstr(nim_property_206427), convert_object_206414(nim_value_206428));
			F.line = 936;
			}}
			break;
		case 2:
			F.line = 938;
			result_206417 = new_jint_186137(x_206416);
			break;
		case 3:
			F.line = 940;
			result_206417 = new_jfloat_186154(x_206416);
			break;
		case 4:
			F.line = 942;
			result_206417 = new_jstring_186087(cstrToNimstr(x_206416));
			break;
		case 1:
			F.line = 944;
			result_206417 = new_jbool_186171(x_206416);
			break;
		case 0:
			F.line = 946;
			result_206417 = new_jnull_186188();
			break;
		}
	framePtr = F.prev;

	return result_206417;

}

function parse_json_206457(buffer_206459) {
	var result_206460 = null;

	var F={procname:"json.parseJson",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 949;
		result_206460 = convert_object_206414(JSON.parse(toJSStr(buffer_206459)));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_206460;

}

function HEX2AHEX3D_159841(x_159845, x_159845_Idx, y_159846) {
	var F={procname:"*=.*=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4157;
		x_159845[x_159845_Idx] = (x_159845[x_159845_Idx] * y_159846);
	framePtr = F.prev;

	
}

function HEX5E_232960(x_232963, y_232964) {
	var result_232965 = [0.0];

	var F={procname:"^.^",prev:framePtr,filename:"math.nim",line:0};
	framePtr = F;
		F.line = 998;
		switch (y_232964) {
		case 0:
			F.line = 999;
			result_232965[0] = 1.0000000000000000e+00;
			break;
		case 1:
			F.line = 1000;
			result_232965[0] = x_232963;
			break;
		case 2:
			F.line = 1001;
			result_232965[0] = (x_232963 * x_232963);
			break;
		case 3:
			F.line = 1002;
			result_232965[0] = ((x_232963 * x_232963) * x_232963);
			break;
		default: 
			F.line = 1004;
			var colontmp__233584 = {Field0: 0.0, Field1: 0};
			F.line = 1004;
			var x_232967 = [0.0];
			F.line = 1004;
			var y_232968 = 0;
			F.line = 1004;
			nimCopy(colontmp__233584, {Field0: x_232963, Field1: nimCopy(null, y_232964, NTI3604)}, NTI232966);
			F.line = 1004;
			x_232967[0] = colontmp__233584["Field0"];
			F.line = 1004;
			y_232968 = colontmp__233584["Field1"];
			F.line = 1005;
			result_232965[0] = 1.0000000000000000e+00;
			L1: do {
				F.line = 1006;
					L2: while (true) {
					if (!true) break L2;
						if (!(((y_232968 & 1) == 0))) {
						F.line = 1008;
						HEX2AHEX3D_159841(result_232965, 0, x_232967[0]);
						}
						
						F.line = 1009;
						y_232968 = chckRange((y_232968 >> 1), 0, 2147483647);
						if ((y_232968 == 0)) {
						F.line = 1011;
						break L1;
						}
						
						F.line = 1012;
						HEX2AHEX3D_159841(x_232967, 0, x_232967[0]);
					}
			} while(false);
			break;
		}
	framePtr = F.prev;

	return result_232965[0];

}

function change_color1_232476(context_232479) {
	var F={procname:"randomWalk.changeColor1",prev:framePtr,filename:"randomWalk.nim",line:0};
	framePtr = F;
		if (eqStrings(context_232479.shapeId, makeNimstrLit("red"))) {
		F.line = 32;
		context_232479.shapeId = nimCopy(null, makeNimstrLit("green"), NTI138);
		}
		else {
			F.line = 34;
			context_232479.shapeId = nimCopy(null, makeNimstrLit("red"), NTI138);
		}
		
	framePtr = F.prev;

	
}

function change_color2_232495(context_232498) {
	var F={procname:"randomWalk.changeColor2",prev:framePtr,filename:"randomWalk.nim",line:0};
	framePtr = F;
		if (eqStrings(context_232498.shapeId, makeNimstrLit("blue"))) {
		F.line = 38;
		context_232498.shapeId = nimCopy(null, makeNimstrLit("orange"), NTI138);
		}
		else {
			F.line = 40;
			context_232498.shapeId = nimCopy(null, makeNimstrLit("blue"), NTI138);
		}
		
	framePtr = F.prev;

	
}

function random_walk2_232546(context_232549) {
	var F={procname:"randomWalk.randomWalk2",prev:framePtr,filename:"randomWalk.nim",line:0};
	framePtr = F;
		F.line = 56;
		HEX2BHEX3D_159861(context_232549, "x", rand_212820(2.0000000000000000e+01));
		F.line = 57;
		HEX2BHEX3D_159861(context_232549, "y", rand_212820(2.0000000000000000e+01));
	framePtr = F.prev;

	
}

function HEX3Aanonymous_230314(eventHEX60gensym230054_230316) {
	var F={procname:"randomWalk.:anonymous",prev:framePtr,filename:"Blackvas.nim",line:0};
	framePtr = F;
		if ((document.getElementById(toJSStr(canvas_id_51001[0])) == null)) {
		F.line = 135;
		var blackvasHEX60gensym230055_230325 = document.getElementById("Blackvas");
		F.line = 136;
		canvas_230056[0] = document.createElement("canvas");
		F.line = 137;
		canvas_230056[0].id = toJSStr(canvas_id_51001[0]);
		F.line = 138;
		canvas_230056[0].height = height_51003[0];
		F.line = 139;
		canvas_230056[0].width = width_51005[0];
		F.line = 140;
		blackvasHEX60gensym230055_230325.appendChild(canvas_230056[0]);
		}
		else {
			F.line = 142;
			canvas_230056[0] = document.getElementById(toJSStr(canvas_id_51001[0]));
		}
		
		F.line = 144;
		context_230057[0] = get_context2d_54234(canvas_230056[0]);
		F.line = 147;
		rawEcho(pretty_202240(virtual_canvas_230127[0], 2));
		F.line = 148;
		draw_230271(context_230057[0]);
		F.line = 149;
		rawEcho(makeNimstrLit("Hello, Blackvas ;)"));
	framePtr = F.prev;

	
}

function HEX3Aanonymous_232732() {
	var F={procname:"randomWalk.:anonymous",prev:framePtr,filename:"shapes.nim",line:0};
	framePtr = F;
		F.line = 73;
		var vas_contextHEX60gensym230486HEX60gensym232585_232734 = [get_vas_context_230546(makeNimstrLit("shape_341143"))];
		F.line = 74;
		random_walk1_232514(vas_contextHEX60gensym230486HEX60gensym232585_232734[0]);
		F.line = 75;
		restruct_json_230626(makeNimstrLit("shape_341143"), vas_contextHEX60gensym230486HEX60gensym232585_232734[0]);
		F.line = 76;
		draw_230271(context_230057[0]);
	framePtr = F.prev;

	
}

function HEX3Aanonymous_232749(eventHEX60gensym230494HEX60gensym232642_232751) {

		function HEX3Aanonymous_232763(eventHEX60gensym230498HEX60gensym232646_232765) {
								var Tmp4;
									var Tmp8;

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"shapes.nim",line:0};
			framePtr = F;
				F.line = 127;
				var shape_instanceHEX60gensym230499HEX60gensym232647_232766 = HEX5BHEX5D_196856(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("virtual_canvas")), makeNimstrLit("shape_341143"));
				F.line = 130;
				var base_shape_xHEX60gensym230500HEX60gensym232648_232767 = 0.0;
				F.line = 131;
				var base_shape_yHEX60gensym230501HEX60gensym232649_232768 = 0.0;
				if (has_key_197815(shape_instanceHEX60gensym230499HEX60gensym232647_232766, makeNimstrLit("x"))) {
				F.line = 133;
				base_shape_xHEX60gensym230500HEX60gensym232648_232767 = get_float_186796(HEX5BHEX5D_196856(shape_instanceHEX60gensym230499HEX60gensym232647_232766, makeNimstrLit("x")), 0.0);
				}
				
				if (has_key_197815(shape_instanceHEX60gensym230499HEX60gensym232647_232766, makeNimstrLit("y"))) {
				F.line = 135;
				base_shape_yHEX60gensym230501HEX60gensym232649_232768 = get_float_186796(HEX5BHEX5D_196856(shape_instanceHEX60gensym230499HEX60gensym232647_232766, makeNimstrLit("y")), 0.0);
				}
				
				F.line = 137;
				var canvas_rectHEX60gensym230502HEX60gensym232650_232773 = canvasHEX60gensym230495HEX60gensym232643_232752.getBoundingClientRect();
				F.line = 139;
				var base_point_xHEX60gensym230503HEX60gensym232651_232774 = (eventHEX60gensym230498HEX60gensym232646_232765.clientX - canvas_rectHEX60gensym230502HEX60gensym232650_232773.left);
				F.line = 140;
				var base_point_yHEX60gensym230504HEX60gensym232652_232775 = (eventHEX60gensym230498HEX60gensym232646_232765.clientY - canvas_rectHEX60gensym230502HEX60gensym232650_232773.top);
				F.line = 141;
				var is_clickHEX60gensym230505HEX60gensym232653_232776 = false;
				F.line = 142;
				var shapesHEX60gensym230506HEX60gensym232654_232804 = new_seq_232778(0);
				L1: do {
					F.line = 143;
					var shape_strHEX60gensym230507HEX60gensym232655_232867 = null;
					F.line = 17;
					var i_233564 = 0;
					if ((i_233564 <= 0)) {
					L2: do {
						F.line = 19;
							L3: while (true) {
							if (!true) break L3;
								F.line = 143;
								shape_strHEX60gensym230507HEX60gensym232655_232867 = (Tmp4 = [makeNimstrLit("{\x0A  \"kind\": \"circle\",\x0A  \"x\": 100.0,\x0A  \"y\": 100.0,\x0A  \"r\": 100.0\x0A}")], Tmp4)[chckIndx(i_233564, 0, (Tmp4 != null ? Tmp4.length : 0)+0-1)-0];
								F.line = 144;
								if (shapesHEX60gensym230506HEX60gensym232654_232804 != null) { shapesHEX60gensym230506HEX60gensym232654_232804.push(parse_json_206457(shape_strHEX60gensym230507HEX60gensym232655_232867)); } else { shapesHEX60gensym230506HEX60gensym232654_232804 = [parse_json_206457(shape_strHEX60gensym230507HEX60gensym232655_232867)]; };
								if ((0 <= i_233564)) {
								F.line = 21;
								break L2;
								}
								
								F.line = 22;
								i_233564 = addInt(i_233564, 1);
							}
					} while(false);
					}
					
				} while(false);
				L5: do {
					F.line = 145;
					var shapeHEX60gensym230508HEX60gensym232656_232881 = null;
					F.line = 184;
					var i_233567 = 0;
					F.line = 185;
					var l_233568 = (shapesHEX60gensym230506HEX60gensym232654_232804 != null ? shapesHEX60gensym230506HEX60gensym232654_232804.length : 0);
					L6: do {
						F.line = 186;
							L7: while (true) {
							if (!(i_233567 < l_233568)) break L7;
								F.line = 145;
								shapeHEX60gensym230508HEX60gensym232656_232881 = shapesHEX60gensym230506HEX60gensym232654_232804[chckIndx(i_233567, 0, (shapesHEX60gensym230506HEX60gensym232654_232804 != null ? shapesHEX60gensym230506HEX60gensym232654_232804.length : 0)+0-1)-0];
								F.line = 147;
								var raw_kindHEX60gensym230509HEX60gensym232657_232883 = pretty_202240(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("kind")), 2);
								F.line = 148;
								var kindHEX60gensym230510HEX60gensym232658_232918 = HEX5BHEX5D_67285(raw_kindHEX60gensym230509HEX60gensym232657_232883, HEX2EHEX2E_67220(1, subInt((raw_kindHEX60gensym230509HEX60gensym232657_232883 != null ? raw_kindHEX60gensym230509HEX60gensym232657_232883.length : 0), 2)));
								F.line = 149;
								switch (toJSStr(kindHEX60gensym230510HEX60gensym232658_232918)) {
								case "rect":
									F.line = 152;
									var xHEX60gensym230511HEX60gensym232659_232920 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("x")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym232648_232767);
									F.line = 153;
									var yHEX60gensym230512HEX60gensym232660_232922 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("y")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym232649_232768);
									F.line = 154;
									var widthHEX60gensym230513HEX60gensym232661_232924 = get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("width")), 0.0);
									F.line = 155;
									var heightHEX60gensym230514HEX60gensym232662_232926 = get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("height")), 0.0);
									F.line = 156;
									var into_cond1HEX60gensym230515HEX60gensym232663_232927 = ((xHEX60gensym230511HEX60gensym232659_232920 <= base_point_xHEX60gensym230503HEX60gensym232651_232774) && (yHEX60gensym230512HEX60gensym232660_232922 <= base_point_yHEX60gensym230504HEX60gensym232652_232775));
									F.line = 157;
									if (!(base_point_xHEX60gensym230503HEX60gensym232651_232774 <= (xHEX60gensym230511HEX60gensym232659_232920 + widthHEX60gensym230513HEX60gensym232661_232924))) Tmp8 = false; else {										Tmp8 = (base_point_yHEX60gensym230504HEX60gensym232652_232775 <= (yHEX60gensym230512HEX60gensym232660_232922 + heightHEX60gensym230514HEX60gensym232662_232926));									}									var into_cond2HEX60gensym230516HEX60gensym232664_232928 = Tmp8;
									if ((into_cond1HEX60gensym230515HEX60gensym232663_232927 && into_cond2HEX60gensym230516HEX60gensym232664_232928)) {
									F.line = 159;
									is_clickHEX60gensym230505HEX60gensym232653_232776 = true;
									}
									
									break;
								case "triangle":
									F.line = 164;
									var x1HEX60gensym230517HEX60gensym232665_232930 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("x1")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym232648_232767);
									F.line = 165;
									var y1HEX60gensym230518HEX60gensym232666_232932 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("y1")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym232649_232768);
									F.line = 166;
									var x2HEX60gensym230519HEX60gensym232667_232934 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("x2")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym232648_232767);
									F.line = 167;
									var y2HEX60gensym230520HEX60gensym232668_232936 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("y2")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym232649_232768);
									F.line = 168;
									var x3HEX60gensym230521HEX60gensym232669_232938 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("x3")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym232648_232767);
									F.line = 169;
									var y3HEX60gensym230522HEX60gensym232670_232940 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("y3")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym232649_232768);
									F.line = 170;
									var areaHEX60gensym230523HEX60gensym232671_232941 = (5.0000000000000000e-01 * ((((-(y2HEX60gensym230520HEX60gensym232668_232936) * x3HEX60gensym230521HEX60gensym232669_232938) + (y1HEX60gensym230518HEX60gensym232666_232932 * (-(x2HEX60gensym230519HEX60gensym232667_232934) + x3HEX60gensym230521HEX60gensym232669_232938))) + (x1HEX60gensym230517HEX60gensym232665_232930 * (y2HEX60gensym230520HEX60gensym232668_232936 - y3HEX60gensym230522HEX60gensym232670_232940))) + (x2HEX60gensym230519HEX60gensym232667_232934 * y3HEX60gensym230522HEX60gensym232670_232940)));
									F.line = 171;
									var s_scalaHEX60gensym230524HEX60gensym232672_232943 = ((1.0000000000000000e+00 / (2.0000000000000000e+00 * areaHEX60gensym230523HEX60gensym232671_232941)) * ((((y1HEX60gensym230518HEX60gensym232666_232932 * x3HEX60gensym230521HEX60gensym232669_232938) - (x1HEX60gensym230517HEX60gensym232665_232930 * y3HEX60gensym230522HEX60gensym232670_232940)) + ((y3HEX60gensym230522HEX60gensym232670_232940 - y1HEX60gensym230518HEX60gensym232666_232932) * base_point_xHEX60gensym230503HEX60gensym232651_232774)) + ((x1HEX60gensym230517HEX60gensym232665_232930 - x3HEX60gensym230521HEX60gensym232669_232938) * base_point_yHEX60gensym230504HEX60gensym232652_232775)));
									F.line = 172;
									var t_scalaHEX60gensym230525HEX60gensym232673_232945 = ((1.0000000000000000e+00 / (2.0000000000000000e+00 * areaHEX60gensym230523HEX60gensym232671_232941)) * ((((x1HEX60gensym230517HEX60gensym232665_232930 * y2HEX60gensym230520HEX60gensym232668_232936) - (y1HEX60gensym230518HEX60gensym232666_232932 * x2HEX60gensym230519HEX60gensym232667_232934)) + ((y1HEX60gensym230518HEX60gensym232666_232932 - y2HEX60gensym230520HEX60gensym232668_232936) * base_point_xHEX60gensym230503HEX60gensym232651_232774)) + ((x2HEX60gensym230519HEX60gensym232667_232934 - x1HEX60gensym230517HEX60gensym232665_232930) * base_point_yHEX60gensym230504HEX60gensym232652_232775)));
									F.line = 173;
									var scala_diffHEX60gensym230526HEX60gensym232674_232947 = ((1.0000000000000000e+00 - s_scalaHEX60gensym230524HEX60gensym232672_232943) - t_scalaHEX60gensym230525HEX60gensym232673_232945);
									if (((((0.0 < s_scalaHEX60gensym230524HEX60gensym232672_232943) && (s_scalaHEX60gensym230524HEX60gensym232672_232943 < 1.0000000000000000e+00)) && ((0.0 < t_scalaHEX60gensym230525HEX60gensym232673_232945) && (t_scalaHEX60gensym230525HEX60gensym232673_232945 < 1.0000000000000000e+00))) && ((0.0 < scala_diffHEX60gensym230526HEX60gensym232674_232947) && (scala_diffHEX60gensym230526HEX60gensym232674_232947 < 1.0000000000000000e+00)))) {
									F.line = 175;
									is_clickHEX60gensym230505HEX60gensym232653_232776 = true;
									}
									
									break;
								case "circle":
									F.line = 179;
									var xHEX60gensym230527HEX60gensym232675_232955 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("x")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym232648_232767);
									F.line = 180;
									var yHEX60gensym230528HEX60gensym232676_232957 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("y")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym232649_232768);
									F.line = 181;
									var rHEX60gensym230529HEX60gensym232677_232959 = get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym232656_232881, makeNimstrLit("r")), 0.0);
									F.line = 182;
									var point_distance_squareHEX60gensym230530HEX60gensym232678_233024 = (HEX5E_232960((xHEX60gensym230527HEX60gensym232675_232955 - base_point_xHEX60gensym230503HEX60gensym232651_232774), 2) + HEX5E_232960((yHEX60gensym230528HEX60gensym232676_232957 - base_point_yHEX60gensym230504HEX60gensym232652_232775), 2));
									if ((point_distance_squareHEX60gensym230530HEX60gensym232678_233024 <= HEX5E_232960(rHEX60gensym230529HEX60gensym232677_232959, 2))) {
									F.line = 184;
									is_clickHEX60gensym230505HEX60gensym232653_232776 = true;
									}
									
									break;
								default: 
									break;
								}
								F.line = 188;
								i_233567 = addInt(i_233567, 1);
								if (!(((shapesHEX60gensym230506HEX60gensym232654_232804 != null ? shapesHEX60gensym230506HEX60gensym232654_232804.length : 0) == l_233568))) {
								F.line = 189;
								failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				if (is_clickHEX60gensym230505HEX60gensym232653_232776) {
				F.line = 186;
				var vas_contextHEX60gensym230531HEX60gensym232679_233030 = [get_vas_context_230546(makeNimstrLit("shape_341143"))];
				F.line = 187;
				change_color1_232476(vas_contextHEX60gensym230531HEX60gensym232679_233030[0]);
				F.line = 188;
				restruct_json_230626(makeNimstrLit("shape_341143"), vas_contextHEX60gensym230531HEX60gensym232679_233030[0]);
				F.line = 189;
				draw_230271(contextHEX60gensym230497HEX60gensym232645_232762);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"randomWalk.:anonymous",prev:framePtr,filename:"shapes.nim",line:0};
	framePtr = F;
		F.line = 114;
		var canvasHEX60gensym230495HEX60gensym232643_232752 = null;
		if ((document.getElementById(toJSStr(canvas_id_51001[0])) == null)) {
		F.line = 116;
		var blackvasHEX60gensym230496HEX60gensym232644_232761 = document.getElementById("Blackvas");
		F.line = 117;
		canvasHEX60gensym230495HEX60gensym232643_232752 = document.createElement("canvas");
		F.line = 118;
		canvasHEX60gensym230495HEX60gensym232643_232752.id = toJSStr(canvas_id_51001[0]);
		F.line = 119;
		canvasHEX60gensym230495HEX60gensym232643_232752.height = height_51003[0];
		F.line = 120;
		canvasHEX60gensym230495HEX60gensym232643_232752.width = width_51005[0];
		F.line = 121;
		blackvasHEX60gensym230496HEX60gensym232644_232761.appendChild(canvasHEX60gensym230495HEX60gensym232643_232752);
		}
		else {
			F.line = 123;
			canvasHEX60gensym230495HEX60gensym232643_232752 = document.getElementById(toJSStr(canvas_id_51001[0]));
		}
		
		F.line = 124;
		var contextHEX60gensym230497HEX60gensym232645_232762 = get_context2d_54234(canvasHEX60gensym230495HEX60gensym232643_232752);
		F.line = 125;
		canvasHEX60gensym230495HEX60gensym232643_232752.addEventListener("click", HEX3Aanonymous_232763, false);
	framePtr = F.prev;

	
}

function HEX3Aanonymous_233187(eventHEX60gensym230494HEX60gensym233096_233189) {

		function HEX3Aanonymous_233201(eventHEX60gensym230498HEX60gensym233100_233203) {
								var Tmp4;
									var Tmp8;

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"shapes.nim",line:0};
			framePtr = F;
				F.line = 127;
				var shape_instanceHEX60gensym230499HEX60gensym233101_233204 = HEX5BHEX5D_196856(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("virtual_canvas")), makeNimstrLit("shape_4076194"));
				F.line = 130;
				var base_shape_xHEX60gensym230500HEX60gensym233102_233205 = 0.0;
				F.line = 131;
				var base_shape_yHEX60gensym230501HEX60gensym233103_233206 = 0.0;
				if (has_key_197815(shape_instanceHEX60gensym230499HEX60gensym233101_233204, makeNimstrLit("x"))) {
				F.line = 133;
				base_shape_xHEX60gensym230500HEX60gensym233102_233205 = get_float_186796(HEX5BHEX5D_196856(shape_instanceHEX60gensym230499HEX60gensym233101_233204, makeNimstrLit("x")), 0.0);
				}
				
				if (has_key_197815(shape_instanceHEX60gensym230499HEX60gensym233101_233204, makeNimstrLit("y"))) {
				F.line = 135;
				base_shape_yHEX60gensym230501HEX60gensym233103_233206 = get_float_186796(HEX5BHEX5D_196856(shape_instanceHEX60gensym230499HEX60gensym233101_233204, makeNimstrLit("y")), 0.0);
				}
				
				F.line = 137;
				var canvas_rectHEX60gensym230502HEX60gensym233104_233211 = canvasHEX60gensym230495HEX60gensym233097_233190.getBoundingClientRect();
				F.line = 139;
				var base_point_xHEX60gensym230503HEX60gensym233105_233212 = (eventHEX60gensym230498HEX60gensym233100_233203.clientX - canvas_rectHEX60gensym230502HEX60gensym233104_233211.left);
				F.line = 140;
				var base_point_yHEX60gensym230504HEX60gensym233106_233213 = (eventHEX60gensym230498HEX60gensym233100_233203.clientY - canvas_rectHEX60gensym230502HEX60gensym233104_233211.top);
				F.line = 141;
				var is_clickHEX60gensym230505HEX60gensym233107_233214 = false;
				F.line = 142;
				var shapesHEX60gensym230506HEX60gensym233108_233221 = new_seq_232778(0);
				L1: do {
					F.line = 143;
					var shape_strHEX60gensym230507HEX60gensym233109_233231 = null;
					F.line = 17;
					var i_233586 = 0;
					if ((i_233586 <= 0)) {
					L2: do {
						F.line = 19;
							L3: while (true) {
							if (!true) break L3;
								F.line = 143;
								shape_strHEX60gensym230507HEX60gensym233109_233231 = (Tmp4 = [makeNimstrLit("{\x0A  \"kind\": \"rect\",\x0A  \"x\": 300.0,\x0A  \"y\": 300.0,\x0A  \"width\": 100.0,\x0A  \"height\": 100.0\x0A}")], Tmp4)[chckIndx(i_233586, 0, (Tmp4 != null ? Tmp4.length : 0)+0-1)-0];
								F.line = 144;
								if (shapesHEX60gensym230506HEX60gensym233108_233221 != null) { shapesHEX60gensym230506HEX60gensym233108_233221.push(parse_json_206457(shape_strHEX60gensym230507HEX60gensym233109_233231)); } else { shapesHEX60gensym230506HEX60gensym233108_233221 = [parse_json_206457(shape_strHEX60gensym230507HEX60gensym233109_233231)]; };
								if ((0 <= i_233586)) {
								F.line = 21;
								break L2;
								}
								
								F.line = 22;
								i_233586 = addInt(i_233586, 1);
							}
					} while(false);
					}
					
				} while(false);
				L5: do {
					F.line = 145;
					var shapeHEX60gensym230508HEX60gensym233110_233245 = null;
					F.line = 184;
					var i_233589 = 0;
					F.line = 185;
					var l_233590 = (shapesHEX60gensym230506HEX60gensym233108_233221 != null ? shapesHEX60gensym230506HEX60gensym233108_233221.length : 0);
					L6: do {
						F.line = 186;
							L7: while (true) {
							if (!(i_233589 < l_233590)) break L7;
								F.line = 145;
								shapeHEX60gensym230508HEX60gensym233110_233245 = shapesHEX60gensym230506HEX60gensym233108_233221[chckIndx(i_233589, 0, (shapesHEX60gensym230506HEX60gensym233108_233221 != null ? shapesHEX60gensym230506HEX60gensym233108_233221.length : 0)+0-1)-0];
								F.line = 147;
								var raw_kindHEX60gensym230509HEX60gensym233111_233247 = pretty_202240(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("kind")), 2);
								F.line = 148;
								var kindHEX60gensym230510HEX60gensym233112_233282 = HEX5BHEX5D_67285(raw_kindHEX60gensym230509HEX60gensym233111_233247, HEX2EHEX2E_67220(1, subInt((raw_kindHEX60gensym230509HEX60gensym233111_233247 != null ? raw_kindHEX60gensym230509HEX60gensym233111_233247.length : 0), 2)));
								F.line = 149;
								switch (toJSStr(kindHEX60gensym230510HEX60gensym233112_233282)) {
								case "rect":
									F.line = 152;
									var xHEX60gensym230511HEX60gensym233113_233284 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("x")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym233102_233205);
									F.line = 153;
									var yHEX60gensym230512HEX60gensym233114_233286 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("y")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym233103_233206);
									F.line = 154;
									var widthHEX60gensym230513HEX60gensym233115_233288 = get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("width")), 0.0);
									F.line = 155;
									var heightHEX60gensym230514HEX60gensym233116_233290 = get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("height")), 0.0);
									F.line = 156;
									var into_cond1HEX60gensym230515HEX60gensym233117_233291 = ((xHEX60gensym230511HEX60gensym233113_233284 <= base_point_xHEX60gensym230503HEX60gensym233105_233212) && (yHEX60gensym230512HEX60gensym233114_233286 <= base_point_yHEX60gensym230504HEX60gensym233106_233213));
									F.line = 157;
									if (!(base_point_xHEX60gensym230503HEX60gensym233105_233212 <= (xHEX60gensym230511HEX60gensym233113_233284 + widthHEX60gensym230513HEX60gensym233115_233288))) Tmp8 = false; else {										Tmp8 = (base_point_yHEX60gensym230504HEX60gensym233106_233213 <= (yHEX60gensym230512HEX60gensym233114_233286 + heightHEX60gensym230514HEX60gensym233116_233290));									}									var into_cond2HEX60gensym230516HEX60gensym233118_233292 = Tmp8;
									if ((into_cond1HEX60gensym230515HEX60gensym233117_233291 && into_cond2HEX60gensym230516HEX60gensym233118_233292)) {
									F.line = 159;
									is_clickHEX60gensym230505HEX60gensym233107_233214 = true;
									}
									
									break;
								case "triangle":
									F.line = 164;
									var x1HEX60gensym230517HEX60gensym233119_233294 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("x1")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym233102_233205);
									F.line = 165;
									var y1HEX60gensym230518HEX60gensym233120_233296 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("y1")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym233103_233206);
									F.line = 166;
									var x2HEX60gensym230519HEX60gensym233121_233298 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("x2")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym233102_233205);
									F.line = 167;
									var y2HEX60gensym230520HEX60gensym233122_233300 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("y2")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym233103_233206);
									F.line = 168;
									var x3HEX60gensym230521HEX60gensym233123_233302 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("x3")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym233102_233205);
									F.line = 169;
									var y3HEX60gensym230522HEX60gensym233124_233304 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("y3")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym233103_233206);
									F.line = 170;
									var areaHEX60gensym230523HEX60gensym233125_233305 = (5.0000000000000000e-01 * ((((-(y2HEX60gensym230520HEX60gensym233122_233300) * x3HEX60gensym230521HEX60gensym233123_233302) + (y1HEX60gensym230518HEX60gensym233120_233296 * (-(x2HEX60gensym230519HEX60gensym233121_233298) + x3HEX60gensym230521HEX60gensym233123_233302))) + (x1HEX60gensym230517HEX60gensym233119_233294 * (y2HEX60gensym230520HEX60gensym233122_233300 - y3HEX60gensym230522HEX60gensym233124_233304))) + (x2HEX60gensym230519HEX60gensym233121_233298 * y3HEX60gensym230522HEX60gensym233124_233304)));
									F.line = 171;
									var s_scalaHEX60gensym230524HEX60gensym233126_233307 = ((1.0000000000000000e+00 / (2.0000000000000000e+00 * areaHEX60gensym230523HEX60gensym233125_233305)) * ((((y1HEX60gensym230518HEX60gensym233120_233296 * x3HEX60gensym230521HEX60gensym233123_233302) - (x1HEX60gensym230517HEX60gensym233119_233294 * y3HEX60gensym230522HEX60gensym233124_233304)) + ((y3HEX60gensym230522HEX60gensym233124_233304 - y1HEX60gensym230518HEX60gensym233120_233296) * base_point_xHEX60gensym230503HEX60gensym233105_233212)) + ((x1HEX60gensym230517HEX60gensym233119_233294 - x3HEX60gensym230521HEX60gensym233123_233302) * base_point_yHEX60gensym230504HEX60gensym233106_233213)));
									F.line = 172;
									var t_scalaHEX60gensym230525HEX60gensym233127_233309 = ((1.0000000000000000e+00 / (2.0000000000000000e+00 * areaHEX60gensym230523HEX60gensym233125_233305)) * ((((x1HEX60gensym230517HEX60gensym233119_233294 * y2HEX60gensym230520HEX60gensym233122_233300) - (y1HEX60gensym230518HEX60gensym233120_233296 * x2HEX60gensym230519HEX60gensym233121_233298)) + ((y1HEX60gensym230518HEX60gensym233120_233296 - y2HEX60gensym230520HEX60gensym233122_233300) * base_point_xHEX60gensym230503HEX60gensym233105_233212)) + ((x2HEX60gensym230519HEX60gensym233121_233298 - x1HEX60gensym230517HEX60gensym233119_233294) * base_point_yHEX60gensym230504HEX60gensym233106_233213)));
									F.line = 173;
									var scala_diffHEX60gensym230526HEX60gensym233128_233311 = ((1.0000000000000000e+00 - s_scalaHEX60gensym230524HEX60gensym233126_233307) - t_scalaHEX60gensym230525HEX60gensym233127_233309);
									if (((((0.0 < s_scalaHEX60gensym230524HEX60gensym233126_233307) && (s_scalaHEX60gensym230524HEX60gensym233126_233307 < 1.0000000000000000e+00)) && ((0.0 < t_scalaHEX60gensym230525HEX60gensym233127_233309) && (t_scalaHEX60gensym230525HEX60gensym233127_233309 < 1.0000000000000000e+00))) && ((0.0 < scala_diffHEX60gensym230526HEX60gensym233128_233311) && (scala_diffHEX60gensym230526HEX60gensym233128_233311 < 1.0000000000000000e+00)))) {
									F.line = 175;
									is_clickHEX60gensym230505HEX60gensym233107_233214 = true;
									}
									
									break;
								case "circle":
									F.line = 179;
									var xHEX60gensym230527HEX60gensym233129_233319 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("x")), 0.0) + base_shape_xHEX60gensym230500HEX60gensym233102_233205);
									F.line = 180;
									var yHEX60gensym230528HEX60gensym233130_233321 = (get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("y")), 0.0) + base_shape_yHEX60gensym230501HEX60gensym233103_233206);
									F.line = 181;
									var rHEX60gensym230529HEX60gensym233131_233323 = get_float_186796(HEX5BHEX5D_196856(shapeHEX60gensym230508HEX60gensym233110_233245, makeNimstrLit("r")), 0.0);
									F.line = 182;
									var point_distance_squareHEX60gensym230530HEX60gensym233132_233334 = (HEX5E_232960((xHEX60gensym230527HEX60gensym233129_233319 - base_point_xHEX60gensym230503HEX60gensym233105_233212), 2) + HEX5E_232960((yHEX60gensym230528HEX60gensym233130_233321 - base_point_yHEX60gensym230504HEX60gensym233106_233213), 2));
									if ((point_distance_squareHEX60gensym230530HEX60gensym233132_233334 <= HEX5E_232960(rHEX60gensym230529HEX60gensym233131_233323, 2))) {
									F.line = 184;
									is_clickHEX60gensym230505HEX60gensym233107_233214 = true;
									}
									
									break;
								default: 
									break;
								}
								F.line = 188;
								i_233589 = addInt(i_233589, 1);
								if (!(((shapesHEX60gensym230506HEX60gensym233108_233221 != null ? shapesHEX60gensym230506HEX60gensym233108_233221.length : 0) == l_233590))) {
								F.line = 189;
								failed_assert_impl_15266(makeNimstrLit("/usr/local/Cellar/nim/1.0.6/nim/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				if (is_clickHEX60gensym230505HEX60gensym233107_233214) {
				F.line = 186;
				var vas_contextHEX60gensym230531HEX60gensym233133_233340 = [get_vas_context_230546(makeNimstrLit("shape_4076194"))];
				F.line = 187;
				change_color2_232495(vas_contextHEX60gensym230531HEX60gensym233133_233340[0]);
				F.line = 188;
				restruct_json_230626(makeNimstrLit("shape_4076194"), vas_contextHEX60gensym230531HEX60gensym233133_233340[0]);
				F.line = 189;
				draw_230271(contextHEX60gensym230497HEX60gensym233099_233200);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"randomWalk.:anonymous",prev:framePtr,filename:"shapes.nim",line:0};
	framePtr = F;
		F.line = 114;
		var canvasHEX60gensym230495HEX60gensym233097_233190 = null;
		if ((document.getElementById(toJSStr(canvas_id_51001[0])) == null)) {
		F.line = 116;
		var blackvasHEX60gensym230496HEX60gensym233098_233199 = document.getElementById("Blackvas");
		F.line = 117;
		canvasHEX60gensym230495HEX60gensym233097_233190 = document.createElement("canvas");
		F.line = 118;
		canvasHEX60gensym230495HEX60gensym233097_233190.id = toJSStr(canvas_id_51001[0]);
		F.line = 119;
		canvasHEX60gensym230495HEX60gensym233097_233190.height = height_51003[0];
		F.line = 120;
		canvasHEX60gensym230495HEX60gensym233097_233190.width = width_51005[0];
		F.line = 121;
		blackvasHEX60gensym230496HEX60gensym233098_233199.appendChild(canvasHEX60gensym230495HEX60gensym233097_233190);
		}
		else {
			F.line = 123;
			canvasHEX60gensym230495HEX60gensym233097_233190 = document.getElementById(toJSStr(canvas_id_51001[0]));
		}
		
		F.line = 124;
		var contextHEX60gensym230497HEX60gensym233099_233200 = get_context2d_54234(canvasHEX60gensym230495HEX60gensym233097_233190);
		F.line = 125;
		canvasHEX60gensym230495HEX60gensym233097_233190.addEventListener("click", HEX3Aanonymous_233201, false);
	framePtr = F.prev;

	
}

function HEX3Aanonymous_233369() {
	var F={procname:"randomWalk.:anonymous",prev:framePtr,filename:"shapes.nim",line:0};
	framePtr = F;
		F.line = 73;
		var vas_contextHEX60gensym230486HEX60gensym233134_233371 = [get_vas_context_230546(makeNimstrLit("shape_4076194"))];
		F.line = 74;
		random_walk2_232546(vas_contextHEX60gensym230486HEX60gensym233134_233371[0]);
		F.line = 75;
		restruct_json_230626(makeNimstrLit("shape_4076194"), vas_contextHEX60gensym230486HEX60gensym233134_233371[0]);
		F.line = 76;
		draw_230271(context_230057[0]);
	framePtr = F.prev;

	
}
var canvas_230056 = [null];
var context_230057 = [null];
var global_event_230059 = [null];
var virtual_canvas_230127 = [HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("virtual_canvas"), Field1: new_jobject_186204()}, NTI230075), nimCopy(null, {Field0: makeNimstrLit("shapes"), Field1: new_jobject_186204()}, NTI230075), nimCopy(null, {Field0: makeNimstrLit("styles"), Field1: new_jobject_186204()}, NTI230075)])];
window.addEventListener("load", HEX3Aanonymous_230314, false);
var click_event_proc_seq_230536 = [null];
var local_shape_json_230537 = [new_jarray_186657()];
var shape_json_230538 = [new_jobject_186204()];
var shape_count_230540 = [0];
local_shape_json_230537[0] = new_jarray_186657();
var circle_jsonHEX60gensym231011_231100 = [HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("func"), Field1: HEX25_191961(makeNimstrLit("circle"))}, NTI231046), nimCopy(null, {Field0: makeNimstrLit("x"), Field1: HEX25_192046(1.0000000000000000e+02)}, NTI231046), nimCopy(null, {Field0: makeNimstrLit("y"), Field1: HEX25_192046(1.0000000000000000e+02)}, NTI231046), nimCopy(null, {Field0: makeNimstrLit("r"), Field1: HEX25_192046(1.0000000000000000e+02)}, NTI231046)])];
add_186995(local_shape_json_230537[0], circle_jsonHEX60gensym231011_231100[0]);
add_187222(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("shapes")), makeNimstrLit("MyCircle"), local_shape_json_230537[0]);
local_shape_json_230537[0] = new_jarray_186657();
var rect_jsonHEX60gensym231253_231343 = [HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("func"), Field1: HEX25_191961(makeNimstrLit("rect"))}, NTI231288), nimCopy(null, {Field0: makeNimstrLit("x"), Field1: HEX25_192046(3.0000000000000000e+02)}, NTI231288), nimCopy(null, {Field0: makeNimstrLit("y"), Field1: HEX25_192046(3.0000000000000000e+02)}, NTI231288), nimCopy(null, {Field0: makeNimstrLit("width"), Field1: HEX25_192046(1.0000000000000000e+02)}, NTI231288), nimCopy(null, {Field0: makeNimstrLit("height"), Field1: HEX25_192046(1.0000000000000000e+02)}, NTI231288)])];
add_186995(local_shape_json_230537[0], rect_jsonHEX60gensym231253_231343[0]);
add_187222(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("shapes")), makeNimstrLit("MyRect"), local_shape_json_230537[0]);
var blackvas_style_map_232229 = [init_table_231829(64)];
add_187222(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles")), makeNimstrLit("#red"), new_jarray_186657());
add_186995(HEX5BHEX5D_196856(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles")), makeNimstrLit("#red")), HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("style"), Field1: HEX25_191961(makeNimstrLit("color"))}, NTI232233), nimCopy(null, {Field0: makeNimstrLit("value"), Field1: HEX25_191961(makeNimstrLit("#ff0000"))}, NTI232233)]));
add_187222(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles")), makeNimstrLit("#green"), new_jarray_186657());
add_186995(HEX5BHEX5D_196856(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles")), makeNimstrLit("#green")), HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("style"), Field1: HEX25_191961(makeNimstrLit("color"))}, NTI232294), nimCopy(null, {Field0: makeNimstrLit("value"), Field1: HEX25_191961(makeNimstrLit("#008000"))}, NTI232294)]));
add_187222(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles")), makeNimstrLit("#blue"), new_jarray_186657());
add_186995(HEX5BHEX5D_196856(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles")), makeNimstrLit("#blue")), HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("style"), Field1: HEX25_191961(makeNimstrLit("color"))}, NTI232355), nimCopy(null, {Field0: makeNimstrLit("value"), Field1: HEX25_191961(makeNimstrLit("#0000ff"))}, NTI232355)]));
add_187222(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles")), makeNimstrLit("#orange"), new_jarray_186657());
add_186995(HEX5BHEX5D_196856(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("styles")), makeNimstrLit("#orange")), HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("style"), Field1: HEX25_191961(makeNimstrLit("color"))}, NTI232416), nimCopy(null, {Field0: makeNimstrLit("value"), Field1: HEX25_191961(makeNimstrLit("#ffa500"))}, NTI232416)]));
var dx_232474 = [5.0000000000000000e+00];
var dy_232475 = [5.0000000000000000e+00];
shape_json_230538[0] = HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("shape"), Field1: HEX25_191961(makeNimstrLit("MyCircle"))}, NTI232681)]);
HEX5BHEX5DHEX3D_192414(shape_json_230538[0], makeNimstrLit("id"), new_jstring_186087(makeNimstrLit("red")));
window.setInterval(HEX3Aanonymous_232732, 20);
window.addEventListener("load", HEX3Aanonymous_232749, false);
add_187222(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("virtual_canvas")), makeNimstrLit("shape_341143"), shape_json_230538[0]);
shape_json_230538[0] = HEX25_192080([nimCopy(null, {Field0: makeNimstrLit("shape"), Field1: HEX25_191961(makeNimstrLit("MyRect"))}, NTI233136)]);
HEX5BHEX5DHEX3D_192414(shape_json_230538[0], makeNimstrLit("id"), new_jstring_186087(makeNimstrLit("blue")));
window.addEventListener("load", HEX3Aanonymous_233187, false);
window.setInterval(HEX3Aanonymous_233369, 20);
add_187222(HEX5BHEX5D_196856(virtual_canvas_230127[0], makeNimstrLit("virtual_canvas")), makeNimstrLit("shape_4076194"), shape_json_230538[0]);
